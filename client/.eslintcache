[{"/Users/azibzahid/Desktop/cms/client/src/index.js":"1","/Users/azibzahid/Desktop/cms/client/src/App.js":"2","/Users/azibzahid/Desktop/cms/client/src/pages/student/Dashboard.js":"3","/Users/azibzahid/Desktop/cms/client/src/pages/student/CourseRegistration.js":"4","/Users/azibzahid/Desktop/cms/client/src/pages/student/Courses.js":"5","/Users/azibzahid/Desktop/cms/client/src/pages/student/Login.js":"6","/Users/azibzahid/Desktop/cms/client/src/pages/faculty_member/Login.js":"7","/Users/azibzahid/Desktop/cms/client/src/pages/student/Account.js":"8","/Users/azibzahid/Desktop/cms/client/src/pages/faculty_member/Dashboard.js":"9","/Users/azibzahid/Desktop/cms/client/src/pages/faculty_member/Courses.js":"10","/Users/azibzahid/Desktop/cms/client/src/pages/faculty_member/Account.js":"11","/Users/azibzahid/Desktop/cms/client/src/pages/faculty_member/UploadAttendance.js":"12","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Login.js":"13","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Faculties.js":"14","/Users/azibzahid/Desktop/cms/client/src/pages/student/Result.js":"15","/Users/azibzahid/Desktop/cms/client/src/pages/admin/FacultyMembers.js":"16","/Users/azibzahid/Desktop/cms/client/src/pages/admin/AddStudent.js":"17","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Students.js":"18","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Dashboard.js":"19","/Users/azibzahid/Desktop/cms/client/src/pages/admin/AddFacultyMember.js":"20","/Users/azibzahid/Desktop/cms/client/src/pages/admin/AddFaculty.js":"21","/Users/azibzahid/Desktop/cms/client/src/pages/Logout.js":"22","/Users/azibzahid/Desktop/cms/client/src/pages/student/Containers/listItems.js":"23","/Users/azibzahid/Desktop/cms/client/src/pages/student/Containers/CourseList.js":"24","/Users/azibzahid/Desktop/cms/client/src/pages/student/Containers/AccountDetails.js":"25","/Users/azibzahid/Desktop/cms/client/src/pages/student/Containers/RegisterCourses.js":"26","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Containers/listItems.js":"27","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Containers/FacultyForm.js":"28","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Containers/FacultyMemberForm.js":"29","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Containers/FacultyList.js":"30","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Containers/StudentForm.js":"31","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Containers/StudentList.js":"32","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Containers/FacultyMemberList.js":"33","/Users/azibzahid/Desktop/cms/client/src/pages/student/Containers/ResultCards.js":"34","/Users/azibzahid/Desktop/cms/client/src/pages/faculty_member/Containers/listItems.js":"35","/Users/azibzahid/Desktop/cms/client/src/pages/faculty_member/Containers/Attendance.js":"36","/Users/azibzahid/Desktop/cms/client/src/pages/faculty_member/Containers/AccountDetails.js":"37","/Users/azibzahid/Desktop/cms/client/src/pages/faculty_member/Containers/CourseList.js":"38"},{"size":5789,"mtime":1701125998053,"results":"39","hashOfConfig":"40"},{"size":2204,"mtime":1701125998053,"results":"41","hashOfConfig":"40"},{"size":5444,"mtime":1701126113818,"results":"42","hashOfConfig":"40"},{"size":5377,"mtime":1701126113818,"results":"43","hashOfConfig":"40"},{"size":5250,"mtime":1701126113818,"results":"44","hashOfConfig":"40"},{"size":5562,"mtime":1701126113818,"results":"45","hashOfConfig":"40"},{"size":5603,"mtime":1701126087093,"results":"46","hashOfConfig":"40"},{"size":5260,"mtime":1701126113818,"results":"47","hashOfConfig":"40"},{"size":5444,"mtime":1701126087093,"results":"48","hashOfConfig":"40"},{"size":5250,"mtime":1701126087093,"results":"49","hashOfConfig":"40"},{"size":5260,"mtime":1701126087093,"results":"50","hashOfConfig":"40"},{"size":5260,"mtime":1701126087093,"results":"51","hashOfConfig":"40"},{"size":5538,"mtime":1701126044224,"results":"52","hashOfConfig":"40"},{"size":5255,"mtime":1701207230704,"results":"53","hashOfConfig":"40"},{"size":5195,"mtime":1701126113818,"results":"54","hashOfConfig":"40"},{"size":5282,"mtime":1701126044224,"results":"55","hashOfConfig":"40"},{"size":5400,"mtime":1701126044224,"results":"56","hashOfConfig":"40"},{"size":5251,"mtime":1701126044224,"results":"57","hashOfConfig":"40"},{"size":5397,"mtime":1701126044224,"results":"58","hashOfConfig":"40"},{"size":5418,"mtime":1701208561209,"results":"59","hashOfConfig":"40"},{"size":5403,"mtime":1701284028155,"results":"60","hashOfConfig":"40"},{"size":92,"mtime":1701126033899,"results":"61","hashOfConfig":"40"},{"size":2499,"mtime":1701126119784,"results":"62","hashOfConfig":"40"},{"size":6598,"mtime":1701126119784,"results":"63","hashOfConfig":"40"},{"size":3577,"mtime":1701126119784,"results":"64","hashOfConfig":"40"},{"size":12214,"mtime":1701126119784,"results":"65","hashOfConfig":"40"},{"size":2041,"mtime":1701284028156,"results":"66","hashOfConfig":"40"},{"size":6550,"mtime":1701284028155,"results":"67","hashOfConfig":"40"},{"size":10904,"mtime":1701284028156,"results":"68","hashOfConfig":"40"},{"size":17195,"mtime":1701284028156,"results":"69","hashOfConfig":"40"},{"size":10681,"mtime":1701126057491,"results":"70","hashOfConfig":"40"},{"size":17603,"mtime":1701126057491,"results":"71","hashOfConfig":"40"},{"size":16479,"mtime":1701126057491,"results":"72","hashOfConfig":"40"},{"size":6124,"mtime":1701126119784,"results":"73","hashOfConfig":"40"},{"size":1860,"mtime":1701126094146,"results":"74","hashOfConfig":"40"},{"size":12725,"mtime":1701126094146,"results":"75","hashOfConfig":"40"},{"size":3070,"mtime":1701126094146,"results":"76","hashOfConfig":"40"},{"size":5521,"mtime":1701126094146,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},"1t49sni",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"81"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"81"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"81"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"81"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"81"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"81"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"81"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"81"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"81"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"81"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"81"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"81"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"81"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"81"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"81"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"81"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"81"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"81"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"81"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"81"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"81"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"81"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"81"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"81"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"81"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"81"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"81"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"81"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"81"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"81"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"81"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"81"},"/Users/azibzahid/Desktop/cms/client/src/index.js",["186","187","188"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport 'fontsource-roboto';\n\nimport StudentLogin from './pages/student/Login';\nimport StudentDashboard from './pages/student/Dashboard';\nimport StudentCourses from './pages/student/Courses';\nimport StudentCourseRegistration from './pages/student/CourseRegistration';\nimport StudentResult from './pages/student/Result';\nimport StudentAccount from './pages/student/Account';\n\nimport FacultyMemberLogin from './pages/faculty_member/Login';\nimport FacultyMemberDashboard from './pages/faculty_member/Dashboard';\nimport FacultyMemberAccount from './pages/faculty_member/Account';\nimport FacultyMemberCourses from './pages/faculty_member/Courses';\nimport FacultyMemberUploadAttendance from './pages/faculty_member/UploadAttendance';\n\nimport AdminLogin from './pages/admin/Login';\nimport AdminDashboard from './pages/admin/Dashboard';\nimport AdminFaculties from './pages/admin/Faculties';\nimport AdminAddFaculty from './pages/admin/AddFaculty';\nimport AdminFacultyMembers from './pages/admin/FacultyMembers';\nimport AdminAddFacultyMember from './pages/admin/AddFacultyMember';\nimport AdminStudents from './pages/admin/Students';\nimport AdminAddStudent from './pages/admin/AddStudent';\n\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#33ab9f',\n      main: '#009688',\n      dark: '#00695f',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#4aedc4',\n      main: '#1de9b6',\n      dark: '#14a37f',\n      contrastText: '#000',\n    },\n    error: {\n      light: '#f6685e',\n      main: '#f44336',\n      dark: '#aa2e25',\n      contrastText: '#fff',\n    },\n    type: 'light'\n  },\n  fontFamily: 'fontsource-roboto' // as an aside, highly recommend importing roboto font for Material UI projects! Looks really nice\n});\n\nvar studentLoggedIn = false;\nvar facultyMemberLoggedIn = false;\nvar adminLoggedIn = false;\n\nif (localStorage.isLoggedIn) {\n  if(localStorage.user == 'student')\n    studentLoggedIn = true;\n  else if(localStorage.user == 'faculty_member')\n    facultyMemberLoggedIn = true;\n  else if(localStorage.user == 'admin')\n    adminLoggedIn = true;\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\"><App/></Route>\n\n        {/* Student routes */}\n        <Route exact path=\"/student/login\">\n          {studentLoggedIn ? <Redirect to=\"/student/dashboard\" /> : <StudentLogin/>}\n        </Route>\n        <Route exact path=\"/student/dashboard\">\n          {studentLoggedIn ? <StudentDashboard/> : <Redirect to=\"/student/login\" />}\n        </Route>\n        <Route exact path=\"/student/courses\">\n          {studentLoggedIn ? <StudentCourses/> : <Redirect to=\"/student/login\" />}\n        </Route>\n        <Route exact path=\"/student/course_registration\">\n          {studentLoggedIn ? <StudentCourseRegistration/> : <Redirect to=\"/student/login\" />}\n        </Route>\n        <Route exact path=\"/student/result\">\n          {studentLoggedIn ? <StudentResult/> : <Redirect to=\"/student/login\" />}\n        </Route>\n        <Route exact path=\"/student/account\">\n          {studentLoggedIn ? <StudentAccount/> : <Redirect to=\"/student/login\" />}\n        </Route>\n        <Route exact path=\"/student/register_course\">\n          {studentLoggedIn ? <StudentCourseRegistration/> : <Redirect to=\"/student/login\" />}\n        </Route>\n\n        {/* Faculty Member routes */}\n        <Route exact path=\"/faculty_member/login\">\n          {facultyMemberLoggedIn ? <Redirect to=\"/faculty_member/dashboard\" /> : <FacultyMemberLogin/>}\n        </Route>\n        <Route exact path=\"/faculty_member/dashboard\">\n          {facultyMemberLoggedIn ? <FacultyMemberDashboard/> : <Redirect to=\"/faculty_member/login\" />}\n        </Route>\n        <Route exact path=\"/faculty_member/courses\">\n          {facultyMemberLoggedIn ? <FacultyMemberCourses/> : <Redirect to=\"/faculty_member/login\" />}\n        </Route>\n        <Route exact path=\"/faculty_member/account\">\n          {facultyMemberLoggedIn ? <FacultyMemberAccount/> : <Redirect to=\"/faculty_member/login\" />}\n        </Route>\n        <Route exact path=\"/faculty_member/upload_attendance\">\n          {facultyMemberLoggedIn ? <FacultyMemberUploadAttendance/> : <Redirect to=\"/faculty_member/login\" />}\n        </Route>\n\n        {/* Admin Routes */}\n        <Route exact path=\"/admin/login\">\n          {adminLoggedIn ? <Redirect to=\"/admin/dashboard\" /> : <AdminLogin/>}\n        </Route>\n        <Route exact path=\"/admin/dashboard\">\n          {adminLoggedIn ? <AdminDashboard/> : <Redirect to=\"/admin/login\" />}\n        </Route>\n        <Route exact path=\"/admin/faculties\">\n          {adminLoggedIn ? <AdminFaculties/> : <Redirect to=\"/admin/login\" />}\n        </Route>\n        <Route exact path=\"/admin/add_faculty\">\n          {adminLoggedIn ? <AdminAddFaculty/> : <Redirect to=\"/admin/login\" />}\n        </Route>\n        <Route exact path=\"/admin/faculty_members\">\n          {adminLoggedIn ? <AdminFacultyMembers/> : <Redirect to=\"/admin/login\" />}\n        </Route>\n        <Route exact path=\"/admin/add_faculty_member\">\n          {adminLoggedIn ? <AdminAddFacultyMember/> : <Redirect to=\"/admin/login\" />}\n        </Route>\n        <Route exact path=\"/admin/students\">\n          {adminLoggedIn ? <AdminStudents/> : <Redirect to=\"/admin/login\" />}\n        </Route>\n        <Route exact path=\"/admin/add_student\">\n          {adminLoggedIn ? <AdminAddStudent/> : <Redirect to=\"/admin/login\" />}\n        </Route>\n        \n      </Switch>\n    </BrowserRouter>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n",["189","190"],"/Users/azibzahid/Desktop/cms/client/src/App.js",[],"/Users/azibzahid/Desktop/cms/client/src/pages/student/Dashboard.js",["191","192"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { mainListItems, secondaryListItems } from './Containers/listItems';\nimport CourseList from './Containers/CourseList';\nimport AccountDetails from './Containers/AccountDetails';\nimport Logout from './../Logout';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Campus Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Dashboard\n          </Typography>\n          <IconButton color=\"inherit\" onClick = {() => { Logout() }}>\n            <ExitToAppIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <AccountDetails />\n            </Grid>\n            <Grid item xs={12}>\n              <CourseList />\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/student/CourseRegistration.js",["193","194","195"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { mainListItems, secondaryListItems } from './Containers/listItems';\nimport RegisterCourses from './Containers/RegisterCourses';\nimport Logout from './../Logout';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Campus Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function CourseRegistration() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Course Registration\n          </Typography>\n          <IconButton color=\"inherit\" onClick = {() => { Logout() }}>\n            <ExitToAppIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid item xs={12}>\n              <RegisterCourses />\n            </Grid>\n            <Box className={classes.fixedHeight}></Box>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/student/Courses.js",["196"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { mainListItems, secondaryListItems } from './Containers/listItems';\nimport CourseList from './Containers/CourseList';\nimport Logout from './../Logout';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Campus Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 40,\n  },\n}));\n\nexport default function Courses() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Courses\n          </Typography>\n          <IconButton color=\"inherit\" onClick = {() => { Logout() }}>\n            <ExitToAppIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid item xs={12}>\n              <CourseList />\n            </Grid>\n            <Box className={classes.fixedHeight}></Box>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/student/Login.js",["197"],"import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Axios from 'axios';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport bgImage from './../../assets/studentLogin.jpg';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"#\">\n        Campus Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: `url(${bgImage})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'left',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.dark,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const login = () => {\n    setErrorMessage(null);\n    setSuccessMessage(null);\n    Axios.post('http://localhost:4000/api/student/login', {\n      email: email,\n      password: password\n    }).then((response) => {\n      if(response.status == 200) {\n        const authToken = response.headers['x-auth-token']\n        const student = response.data.data;\n        localStorage.setItem('x-auth-token', authToken);\n        localStorage.setItem('reg-no', student.reg_no);\n        localStorage.setItem('email', student.email);\n        localStorage.setItem('isLoggedIn', true);\n        localStorage.setItem('user', 'student');\n        setSuccessMessage(\"Log In Successful\");\n        window.location.href=\"/student/dashboard\";\n      }\n    }).catch((e) => {\n      if (e.response && e.response.data) {\n        const errorMessage = e.response.data.err || e.response.data.message;\n        console.log(errorMessage);\n        setErrorMessage(errorMessage);\n      }\n    })\n  }\n\n  const classes = useStyles();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Student Sign in\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={login}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n            </Grid>\n            {errorMessage &&\n              <Box mt={5}>\n                <Alert severity=\"error\">\n                  <AlertTitle>Error</AlertTitle>{errorMessage}</Alert>\n              </Box>\n            }\n            {successMessage &&\n              <Box mt={5}>\n                <Alert severity=\"success\">\n                  <AlertTitle>Success</AlertTitle>{successMessage}</Alert>\n              </Box>\n            }\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/faculty_member/Login.js",["198"],"import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Axios from 'axios';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport bgImage from './../../assets/instructorLogin.webp';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"#\">\n        Campus Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: `url(${bgImage})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'left',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.dark,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const login = () => {\n    setErrorMessage(null);\n    setSuccessMessage(null);\n    Axios.post('http://localhost:4000/api/faculty-member/login', {\n      email: email,\n      password: password\n    }).then((response) => {\n      if(response.status == 200) {\n        const authToken = response.headers['x-auth-token']\n        const faculty_member = response.data.data;\n        localStorage.setItem('x-auth-token', authToken);\n        localStorage.setItem('id', faculty_member.id);\n        localStorage.setItem('email', faculty_member.email);\n        localStorage.setItem('isLoggedIn', true);\n        localStorage.setItem('user', 'faculty_member');\n        setSuccessMessage(\"Log In Successful\");\n        window.location.href=\"/faculty_member/dashboard\";\n      }\n    }).catch((e) => {\n      if (e.response && e.response.data) {\n        const errorMessage = e.response.data.err || e.response.data.message;\n        console.log(errorMessage);\n        setErrorMessage(errorMessage);\n      }\n    })\n  }\n\n  const classes = useStyles();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Instructor Sign in\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={login}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n            </Grid>\n            {errorMessage &&\n              <Box mt={5}>\n                <Alert severity=\"error\">\n                  <AlertTitle>Error</AlertTitle>{errorMessage}</Alert>\n              </Box>\n            }\n            {successMessage &&\n              <Box mt={5}>\n                <Alert severity=\"success\">\n                  <AlertTitle>Success</AlertTitle>{successMessage}</Alert>\n              </Box>\n            }\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/student/Account.js",["199"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { mainListItems, secondaryListItems } from './Containers/listItems';\nimport AccountDetails from './Containers/AccountDetails';\nimport Logout from '../Logout';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Campus Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 40,\n  },\n}));\n\nexport default function Account() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Account\n          </Typography>\n          <IconButton color=\"inherit\" onClick = {() => { Logout() }}>\n            <ExitToAppIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid item xs={12}>\n              <AccountDetails />\n            </Grid>\n            <Box className={classes.fixedHeight}></Box>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/faculty_member/Dashboard.js",["200","201"],"/Users/azibzahid/Desktop/cms/client/src/pages/faculty_member/Courses.js",["202"],"/Users/azibzahid/Desktop/cms/client/src/pages/faculty_member/Account.js",["203"],"/Users/azibzahid/Desktop/cms/client/src/pages/faculty_member/UploadAttendance.js",["204"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { mainListItems, secondaryListItems } from './Containers/listItems';\nimport Attendance from './Containers/Attendance';\nimport Logout from './../Logout';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Campus Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 40,\n  },\n}));\n\nexport default function Courses() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Upload Attendance\n          </Typography>\n          <IconButton color=\"inherit\" onClick = {() => { Logout() }}>\n            <ExitToAppIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid item xs={12}>\n              <Attendance />\n            </Grid>\n            <Box className={classes.fixedHeight}></Box>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Login.js",["205"],"import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Axios from 'axios';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport bgImage from './../../assets/adminLogin.jpg';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"#\">\n        Campus Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: `url(${bgImage})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'left',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.dark,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const login = () => {\n    setErrorMessage(null);\n    setSuccessMessage(null);\n    Axios.post('http://localhost:4000/api/admin/login', {\n      email: email,\n      password: password\n    }).then((response) => {\n      if(response.status == 200) {\n        const authToken = response.headers['x-auth-token']\n        const admin = response.data.data;\n        localStorage.setItem('x-auth-token', authToken);\n        localStorage.setItem('id', admin.id);\n        localStorage.setItem('email', admin.email);\n        localStorage.setItem('isLoggedIn', true);\n        localStorage.setItem('user', 'admin');\n        setSuccessMessage(\"Log In Successful\");\n        window.location.href=\"/admin/dashboard\";\n      }\n    }).catch((e) => {\n      if (e.response && e.response.data) {\n        const errorMessage = e.response.data.err || e.response.data.message;\n        console.log(errorMessage);\n        setErrorMessage(errorMessage);\n      }\n    })\n  }\n\n  const classes = useStyles();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Admin Sign in\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={login}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n            </Grid>\n            {errorMessage &&\n              <Box mt={5}>\n                <Alert severity=\"error\">\n                  <AlertTitle>Error</AlertTitle>{errorMessage}</Alert>\n              </Box>\n            }\n            {successMessage &&\n              <Box mt={5}>\n                <Alert severity=\"success\">\n                  <AlertTitle>Success</AlertTitle>{successMessage}</Alert>\n              </Box>\n            }\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Faculties.js",["206"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { mainListItems, secondaryListItems } from './Containers/listItems';\nimport FacultyList from './Containers/FacultyList';\nimport Logout from './../Logout';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Campus Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 40,\n  },\n}));\n\nexport default function Faculties() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n          Faculties\n          </Typography>\n          <IconButton color=\"inherit\" onClick = {() => { Logout() }}>\n            <ExitToAppIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid item xs={12}>\n              <FacultyList />\n            </Grid>\n            <Box className={classes.fixedHeight}></Box>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/student/Result.js",["207"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { mainListItems, secondaryListItems } from './Containers/listItems';\nimport ResultCards from './Containers/ResultCards';\nimport Logout from '../Logout';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Campus Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Result() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Result\n          </Typography>\n          <IconButton color=\"inherit\" onClick = {() => { Logout() }}>\n            <ExitToAppIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid item xs={12}>\n              <ResultCards />\n            </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/admin/FacultyMembers.js",["208"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { mainListItems, secondaryListItems } from './Containers/listItems';\nimport FacultyMemberList from './Containers/FacultyMemberList';\nimport Logout from '../Logout';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Campus Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 40,\n  },\n}));\n\nexport default function FacultyMembers() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n          Faculty Members\n          </Typography>\n          <IconButton color=\"inherit\" onClick = {() => { Logout() }}>\n            <ExitToAppIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid item xs={12}>\n              <FacultyMemberList />\n            </Grid>\n            <Box className={classes.fixedHeight}></Box>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/admin/AddStudent.js",["209","210"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { mainListItems, secondaryListItems } from './Containers/listItems';\nimport StudentForm from './Containers/StudentForm';\nimport Logout from './../Logout';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Campus Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function AddStudent() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Add Student\n          </Typography>\n          <IconButton color=\"inherit\" onClick = {() => { Logout() }}>\n            <ExitToAppIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              {/* <AccountDetails /> */}\n            </Grid>\n            <Grid item xs={12}>\n              <StudentForm />\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Students.js",["211"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { mainListItems, secondaryListItems } from './Containers/listItems';\nimport StudentList from './Containers/StudentList';\nimport Logout from '../Logout';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Campus Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 40,\n  },\n}));\n\nexport default function Students() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n          Students\n          </Typography>\n          <IconButton color=\"inherit\" onClick = {() => { Logout() }}>\n            <ExitToAppIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid item xs={12}>\n              <StudentList />\n            </Grid>\n            <Box className={classes.fixedHeight}></Box>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Dashboard.js",["212","213"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { mainListItems, secondaryListItems } from './Containers/listItems';\nimport FacultyList from './Containers/FacultyList';\nimport Logout from './../Logout';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Campus Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Dashboard\n          </Typography>\n          <IconButton color=\"inherit\" onClick = {() => { Logout() }}>\n            <ExitToAppIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              {/* <AccountDetails /> */}\n            </Grid>\n            <Grid item xs={12}>\n              <FacultyList />\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/admin/AddFacultyMember.js",["214","215"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { mainListItems, secondaryListItems } from './Containers/listItems';\nimport FacultyMemberForm from './Containers/FacultyMemberForm';\nimport Logout from './../Logout';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Campus Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function AddFaculty() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Add Faculty\n          </Typography>\n          <IconButton color=\"inherit\" onClick = {() => { Logout() }}>\n            <ExitToAppIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              {/* <AccountDetails /> */}\n            </Grid>\n            <Grid item xs={12}>\n              <FacultyMemberForm />\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/admin/AddFaculty.js",["216","217"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { mainListItems, secondaryListItems } from './Containers/listItems';\nimport FacultyForm from './Containers/FacultyForm';\nimport Logout from './../Logout';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Campus Management System\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function AddFaculty() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Add Department\n          </Typography>\n          <IconButton color=\"inherit\" onClick = {() => { Logout() }}>\n            <ExitToAppIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              {/* <AccountDetails /> */}\n            </Grid>\n            <Grid item xs={12}>\n              <FacultyForm />\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/Logout.js",[],"/Users/azibzahid/Desktop/cms/client/src/pages/student/Containers/listItems.js",["218","219","220","221","222"],"import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { Link } from 'react-router-dom';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button component={Link} to=\"/student/dashboard\">\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    {/* <ListItem button component={Link} to=\"/student/course_registration\">\n      <ListItemIcon>\n        <PostAddIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Course Registration\" />\n    </ListItem> */}\n    <ListItem button component={Link} to=\"/student/courses\">\n      <ListItemIcon>\n        <LibraryBooksIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Courses\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/student/result\">\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Result\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/student/account\">\n      <ListItemIcon>\n        <AccountCircleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Account\" />\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    {/* <ListSubheader inset>Saved reports</ListSubheader> */}\n    <ListItem button component={Link} to=\"/student/register_course\">\n      <ListItemIcon>\n        <LibraryAddIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Course Registration\" />\n    </ListItem>\n    {/* <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Year-end sale\" />\n    </ListItem> */}\n  </div>\n);","/Users/azibzahid/Desktop/cms/client/src/pages/student/Containers/CourseList.js",["223","224","225"],"import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Axios from 'axios';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n\nconst reg_no = localStorage.getItem('reg-no');\nvar sections = [];\nvar courses = [];\nvar faculty_members = [];\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 40,\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nexport default function CourseList() {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const [isSelected, setIsSelected] = useState(false);\n  const [courseSelected, setCourseSelected] = useState(\"\");\n\n  const retrieveFacultyMembers = (faculty_member_id) => {\n    return new Promise((resolve, reject) => {\n      Axios.get(`http://localhost:4000/api/faculty-member/${faculty_member_id}`, {})\n      .then((response) => {\n        if(response.status == 200){\n          faculty_members.push(response.data.data);\n          console.log(faculty_members);\n        }\n      })\n      .then((data) => {\n        resolve(data);\n      })\n      .catch((e) => {\n        console.log(e);\n      })\n    });\n  }\n\n  const retrieveCourses = () => {\n    sections = [];\n    courses = [];\n    faculty_members = [];\n  \n    Axios.get(`http://localhost:4000/api/student/${reg_no}/courses`, {})\n    .then((response) => {\n      if(response.status == 200) {\n        const student = response.data.data;\n        \n        const enrollments = student.enrollments;\n  \n        enrollments.forEach(enrollment => {\n          sections.push(enrollment.section);\n        });\n\n        var facultyMemberIds = [];\n        sections.forEach(section => {\n          courses.push(section.course);\n          facultyMemberIds.push(section.faculty_member_id);\n        });\n\n        let requests = [];\n        facultyMemberIds.forEach(facultyMemberId => {\n          requests.push(retrieveFacultyMembers(facultyMemberId));\n        });\n        console.log(sections);\n        console.log(courses);\n        \n        Promise.all(requests).then(() => {\n          setLoading(false);\n        })\n      }\n    }).catch((e) => {\n      console.log(e);\n    });\n  }\n\n  if (loading) retrieveCourses();\n\n  const getIndex = (course_code) => {\n    console.log(course_code);\n    var res;\n    courses.forEach((course, index) => {\n      if (course_code == course.course_code) {\n        res = index;\n      }\n    });\n    return res;\n  }\n\n  const handleClick = (event, course_code) => {\n      setIsSelected(true);\n      setCourseSelected(course_code);\n  }\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.paper} elevation={6}>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>Courses</Typography>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"center\">S#</StyledTableCell>\n              <StyledTableCell align=\"center\">Course Code</StyledTableCell>\n              <StyledTableCell align=\"center\">Course Title</StyledTableCell>\n              <StyledTableCell align=\"center\">Section</StyledTableCell>\n              <StyledTableCell align=\"center\">Credit Hours</StyledTableCell>\n              <StyledTableCell align=\"center\">Faculty</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          {loading ? <div>Loading...</div>\n            :\n            <TableBody>\n              {courses.map((course, index) => (\n                <StyledTableRow  key={course.course_code} onClick={(event) => handleClick(event, course.course_code)}>\n                  <StyledTableCell align=\"center\">{index + 1}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{course.course_code}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{course.name}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{sections[index].name}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{course.credit_hours}</StyledTableCell>\n                  <StyledTableCell align=\"center\">\n                    {faculty_members[index].name}\n                  </StyledTableCell>\n                </StyledTableRow >\n              ))}\n            </TableBody>\n          }\n        </Table>\n        <br></br>\n      </Paper>\n      <Box className={classes.fixedHeight}></Box>\n      {!isSelected \n        ? \n        <div>\n          <Typography component=\"h2\" color=\"primary\" gutterBottom>Please select a Course to check the details</Typography>\n        </div>\n        :\n        <div>\n          <Paper className={classes.paper} elevation={6}>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>{courses[getIndex(courseSelected)].name}</Typography>\n            <br></br>\n            <Table size=\"small\">\n              <TableBody>\n                  <StyledTableRow  key={1}>\n                      <StyledTableCell align=\"left\">Faculty: {courses[getIndex(courseSelected)].faculty_name}</StyledTableCell>\n                  </StyledTableRow >\n                  <StyledTableRow  key={2}>\n                      <StyledTableCell align=\"left\">Course Code: {courses[getIndex(courseSelected)].course_code}</StyledTableCell>\n                  </StyledTableRow >\n                  <StyledTableRow  key={3}>\n                      <StyledTableCell align=\"left\">Credit hours: {courses[getIndex(courseSelected)].credit_hours}</StyledTableCell>\n                  </StyledTableRow >\n                  <StyledTableRow  key={4}>\n                      <StyledTableCell align=\"left\">Description: {courses[getIndex(courseSelected)].description}</StyledTableCell>\n                  </StyledTableRow >\n              </TableBody>\n            </Table>\n            <br></br>\n          </Paper>\n          <Box className={classes.fixedHeight}></Box>\n        </div>\n      }\n    </React.Fragment>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/student/Containers/AccountDetails.js",["226","227"],"import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Axios from 'axios';\n\nconst reg_no = localStorage.getItem('reg-no');\nvar student;\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.primary.dark,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\nroot: {\n    '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n    },\n},\n}))(TableRow);\n\nexport default function AccountDetails() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(true);\n\n    const retrieveStudent = () => {\n    student = null;\n\n    Axios.get(`http://localhost:4000/api/student/${reg_no}`, {})\n    .then((response) => {\n      if(response.status == 200) {\n        student = response.data.data;\n        console.log(student);\n        setLoading(false);\n      }\n    }).catch((e) => {\n      console.log(e);\n    });\n  }\n\n  if (loading) retrieveStudent();\n\n  return (\n    <React.Fragment>\n    {loading ? <div>Loading...</div>\n    :\n    <div>\n        <Paper className={classes.paper} elevation={6}>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>{student.name}</Typography>\n            <Table size=\"small\">\n                <TableBody>\n                    <StyledTableRow  key={student.reg_no}>\n                        <StyledTableCell align=\"left\">Faculty Name: {student.faculty_name}</StyledTableCell>\n                        <StyledTableCell align=\"left\">Email: {student.email}</StyledTableCell>\n                    </StyledTableRow >\n                    <StyledTableRow  key={student.reg_no}>\n                        <StyledTableCell align=\"left\">Registration No: {student.reg_no}</StyledTableCell>\n                        <StyledTableCell align=\"left\">Phone: {student.phone}</StyledTableCell>\n                    </StyledTableRow >\n                    <StyledTableRow  key={student.reg_no}>\n                        <StyledTableCell align=\"left\">CGPA: {student.cgpa}</StyledTableCell>\n                        <StyledTableCell align=\"left\">Date of Birth: {student.dob.substring(0,10)}</StyledTableCell>\n                    </StyledTableRow >\n                    <StyledTableRow  key={student.reg_no}>\n                        <StyledTableCell align=\"left\">Batch: {student.batch}</StyledTableCell>\n                        <StyledTableCell align=\"left\">Address: {student.address}</StyledTableCell>\n                    </StyledTableRow >\n                    <StyledTableRow  key={student.reg_no}>\n                        <StyledTableCell align=\"left\">Gender: {student.gender == 'M' ? 'Male' : 'Female'}</StyledTableCell>\n                        <StyledTableCell align=\"left\"></StyledTableCell>\n                    </StyledTableRow >\n                </TableBody>\n            </Table>\n            <br></br>\n        </Paper>\n        <br></br>\n    </div>\n    }\n    </React.Fragment>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/student/Containers/RegisterCourses.js",["228","229","230","231","232","233","234","235","236","237"],"import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Axios from 'axios';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport differenceBy from 'lodash/differenceBy';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst reg_no = localStorage.getItem('reg-no');\nconst authToken = localStorage.getItem('x-auth-token');\nvar sections = [];\nvar courses = [];\nvar registered_courses = [];\nvar all_courses = [];\nvar faculty_members = [];\nvar courseSections = [];\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 40,\n  },\n  dialogTitle: {\n    color: theme.palette.primary.main,\n  }\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nexport default function RegisterCourses() {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const [isSelected, setIsSelected] = useState(false);\n  const [courseSelected, setCourseSelected] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const currentDate = new Date();\n  const [section_id, setSectionId] = useState();\n  const [academic_year, setAcademicYear] = useState(currentDate.getFullYear());\n  const [semester, setSemester] = useState(\"Fall\");\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  // const retrieveFacultyMembers = (faculty_member_id) => {\n  //   return new Promise((resolve, reject) => {\n  //     Axios.get(`http://localhost:4000/api/faculty-member/${faculty_member_id}`, {})\n  //     .then((response) => {\n  //       if(response.status == 200){\n  //         faculty_members.push(response.data.data);\n  //       //   console.log(faculty_members);\n  //       }\n  //     })\n  //     .then((data) => {\n  //       resolve(data);\n  //     })\n  //     .catch((e) => {\n  //       console.log(e);\n  //     })\n  //   });\n  // }\n\n  const retrieveAllCourses = () => {\n    return new Promise((resolve, reject) => {\n      Axios.get(`http://localhost:4000/api/course `, {})\n      .then((response) => {\n        if(response.status == 200) {\n          all_courses = response.data.data;\n        }\n      })\n      .then((data) => {\n        resolve(data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    });\n  }\n\n  const retrieveRegisteredCourses = () => {\n    return new Promise((resolve, reject) => {\n      Axios.get(`http://localhost:4000/api/student/${reg_no}/courses`, {})\n      .then((response) => {\n        if(response.status == 200) {\n          const student = response.data.data;\n          \n          const enrollments = student.enrollments;\n    \n          enrollments.forEach(enrollment => {\n            sections.push(enrollment.section);\n          });\n\n          sections.forEach(section => {\n              registered_courses.push(section.course);\n          });\n        }\n      })\n      .then((data) => {\n        resolve(data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    });\n  }\n\n  const retrieve = () => {\n    sections = [];\n    registered_courses = [];\n    courses = [];\n    all_courses = [];\n    faculty_members = [];\n\n    let requests = [];\n\n    requests.push(retrieveAllCourses());\n    requests.push(retrieveRegisteredCourses());\n    // var facultyMemberIds = [];\n    // sections.forEach(section => {\n    //     registered_courses.push(section.course);\n    //     facultyMemberIds.push(section.faculty_member_id);\n    // });\n\n    // let requests = [];\n    // facultyMemberIds.forEach(facultyMemberId => {\n    //     requests.push(retrieveFacultyMembers(facultyMemberId));\n    // });\n    \n    Promise.all(requests).then(() => {\n      courses = differenceBy(all_courses, registered_courses, 'course_code');\n      console.log(all_courses);\n      console.log(registered_courses);\n      console.log(courses);\n      setLoading(false);\n    })\n  }\n\n  if (loading) retrieve();\n\n  const getIndex = (course_code) => {\n    // console.log(course_code);\n    var res;\n    courses.forEach((course, index) => {\n      if (course_code == course.course_code) {\n        res = index;\n      }\n    });\n    return res;\n  }\n\n  const retrieveSections = (course_code) => {\n    courseSections = [];\n    Axios.get(`http://localhost:4000/api/course/${course_code}/sections`, {})\n    .then((response) => {\n      if(response.status == 200) {\n        courseSections = response.data.data.sections;\n      }\n    })\n    .catch((e) => {\n      console.log(e);\n    });\n  }\n\n  const handleClick = (event, course_code) => {\n    setIsSelected(true);\n    setCourseSelected(course_code);\n    retrieveSections(course_code);\n  }\n\n  const registerCourse = (event) => {\n    event.stopPropagation();\n    setOpen(true);\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const register = () => {\n    setOpen(false);\n\n    setErrorMessage(null);\n    setSuccessMessage(null);\n    Axios.post('http://localhost:4000/api/enrollment', {\n      reg_no: reg_no,\n      section_id: section_id,\n      academic_year: academic_year,\n      semester: semester\n    }, {\n      headers: {\n        'x-auth-token': authToken\n      },\n    }).then((response) => {\n      console.log(response);\n      if(response.data.success) {\n        setSuccessMessage(\"Student Registered Successfully\");\n        console.log(response.data);\n        window.location.href=\"/student/courses\";\n      }\n    }).catch((e) => {\n      if (e.response && e.response.data) {\n        const errorMessage = e.response.data.err || e.response.data.message;\n        console.log(e.response);\n        setErrorMessage(errorMessage);\n      }\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.paper} elevation={6}>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>Courses</Typography>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"center\">S#</StyledTableCell>\n              <StyledTableCell align=\"center\">Course Code</StyledTableCell>\n              <StyledTableCell align=\"center\">Course Title</StyledTableCell>\n              <StyledTableCell align=\"center\">Credit Hours</StyledTableCell>\n              {/* <StyledTableCell align=\"center\">Faculty</StyledTableCell> */}\n            </TableRow>\n          </TableHead>\n          {loading ? <div>Loading...</div>\n            :\n            <TableBody>\n              {courses.map((course, index) => (\n                <StyledTableRow  key={course.course_code} onClick={(event) => handleClick(event, course.course_code)}>\n                  <StyledTableCell align=\"center\">{index + 1}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{course.course_code}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{course.name}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{course.credit_hours}</StyledTableCell>\n                  {/* <StyledTableCell align=\"center\">\n                    {faculty_members[index].name}\n                  </StyledTableCell> */}\n                </StyledTableRow >\n              ))}\n            </TableBody>\n          }\n        </Table>\n        <br></br>\n      </Paper>\n      <Box className={classes.fixedHeight}></Box>\n      {!isSelected \n        ? \n        <div>\n          <Typography component=\"h2\" color=\"primary\" gutterBottom>Please select a Course to check the details</Typography>\n        </div>\n        :\n        <div>\n          <Paper className={classes.paper} elevation={6}>\n            <Box display=\"flex\" p={1} bgcolor=\"background.paper\">\n              <Box p={1} flexGrow={1}>\n                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>{courses[getIndex(courseSelected)].name}</Typography>\n              </Box>\n              <Box p={1}>\n                <Button variant=\"contained\" color=\"primary\" onClick={(event) => registerCourse(event)}>Register</Button>\n              </Box>\n            </Box>\n            <br></br>\n            <Table size=\"small\">\n              <TableBody>\n                  <StyledTableRow  key={1}>\n                      <StyledTableCell align=\"left\">Faculty: {courses[getIndex(courseSelected)].faculty_name}</StyledTableCell>\n                  </StyledTableRow >\n                  <StyledTableRow  key={2}>\n                      <StyledTableCell align=\"left\">Course Code: {courses[getIndex(courseSelected)].course_code}</StyledTableCell>\n                  </StyledTableRow >\n                  <StyledTableRow  key={3}>\n                      <StyledTableCell align=\"left\">Credit hours: {courses[getIndex(courseSelected)].credit_hours}</StyledTableCell>\n                  </StyledTableRow >\n                  <StyledTableRow  key={4}>\n                      <StyledTableCell align=\"left\">Description: {courses[getIndex(courseSelected)].description}</StyledTableCell>\n                  </StyledTableRow >\n              </TableBody>\n            </Table>\n            <br></br>\n          </Paper>\n          <Box className={classes.fixedHeight}></Box>\n          <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\" className={classes.dialogTitle}>Select Section</DialogTitle>\n            <DialogContent>\n              <form className={classes.form} noValidate>\n                <TextField\n                  classes={{ root: classes.root }}\n                  select\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  name=\"section\"\n                  id=\"section\"\n                  variant=\"outlined\"\n                  label=\"Section\"\n                  value={section_id}\n                  onChange={(e) => {\n                    setSectionId(e.target.value);\n                  }}\n                >\n                  {courseSections.map((section, index) => (\n                    <MenuItem value={section.id}>{section.name}</MenuItem>\n                  ))}\n                </TextField>\n               \n                <Box className={classes.fixedHeight}></Box>\n                <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\n                  <Grid item xs={5} sm={5} md={5}>\n                    <Button\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.submit}\n                      onClick={handleClose}\n                    >\n                      Cancel\n                    </Button>\n                  </Grid>\n                  <Grid item xs={1} sm={1} md={1}></Grid>\n                  <Grid item xs={5} sm={5} md={5}>\n                    <Button\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.submit}\n                      onClick={register}\n                    >\n                      Register\n                    </Button>\n                  </Grid>\n                </Grid>\n              </form> \n            </DialogContent>\n            <Box className={classes.fixedHeight}></Box>\n          </Dialog>\n        </div>\n      }\n    </React.Fragment>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Containers/listItems.js",[],"/Users/azibzahid/Desktop/cms/client/src/pages/admin/Containers/FacultyForm.js",["238","239","240","241","242","243","244","245","246","247","248"],"import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Axios from 'axios';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nconst faculty_id = localStorage.getItem('id');\nconst authToken = localStorage.getItem('x-auth-token');\nvar faculties = [];\nvar facultiesWithDean = [];\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 40,\n  },\n  deleteButton: {\n    color: theme.palette.error.contrastText,\n    backgroundColor: theme.palette.error.main,\n    \"&:hover\":{\n      backgroundColor: theme.palette.error.dark\n    },\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function FacultyForm() {\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(true);\n\n  const [name, setName] = useState(\"\");\n  const [location, setLocation] = useState(\" \");\n  const [contact_phone, setContactPhone] = useState(\"\");\n  const [contact_email, setContactEmail] = useState(\"\");\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const addFaculty = () => {\n    setErrorMessage(null);\n    setSuccessMessage(null);\n    Axios.post('http://localhost:4000/api/faculty', {\n      name: name,\n      location: location,\n      contact_phone: contact_phone,\n      contact_email: contact_email,\n    }, {\n      headers: {\n        'x-auth-token': authToken\n      },\n    }).then((response) => {\n      console.log(response);\n      if(response.data.success) {\n        setSuccessMessage(\"Faculty Added Successful\");\n        console.log(response.data);\n        window.location.href=\"/admin/faculties\";\n      }\n    }).catch((e) => {\n      if (e.response && e.response.data) {\n        const errorMessage = e.response.data.err || e.response.data.message;\n        console.log(e.response);\n        setErrorMessage(errorMessage);\n      }\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.paper} elevation={6}>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>Add Department</Typography>\n        <Grid container>\n          <Grid item xs={2} sm={2} md={2}></Grid>\n          <Grid item xs={8} sm={8} md={8} container direction=\"column\" alignItems=\"center\" justify=\"center\" square>\n            <div>\n              <form className={classes.form} noValidate>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"Name\"\n                  name=\"name\"\n                  autoComplete=\"name\"\n                  onChange={(e) => {\n                    setName(e.target.value);\n                  }}\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  id=\"location\"\n                  label=\"Location\"\n                  name=\"location\"\n                  autoComplete=\"location\"\n                  onChange={(e) => {\n                    setLocation(e.target.value);\n                  }}\n                />\n                {/* <TextField\n                  classes={{ root: classes.root }}\n                  select\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  name=\"userRoles\"\n                  id=\"userRoles\"\n                  variant=\"outlined\"\n                  label=\"Faculty Dean\"\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value={10}>Ten</MenuItem>\n                  <MenuItem value={20}>Twenty</MenuItem>\n                  <MenuItem value={30}>Thirty</MenuItem>\n                </TextField> */}\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"contact_phone\"\n                  label=\"Contact No.\"\n                  name=\"contact_phone\"\n                  autoComplete=\"contact-phone\"\n                  onChange={(e) => {\n                    setContactPhone(e.target.value);\n                  }}\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"contact_email\"\n                  label=\"Contact Email Address\"\n                  name=\"contact_email\"\n                  autoComplete=\"contact-email\"\n                  onChange={(e) => {\n                    setContactEmail(e.target.value);\n                  }}\n                />\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  onClick={addFaculty}\n                >\n                  Add Department\n                </Button>\n                {errorMessage &&\n                  <Box mt={5}>\n                    <Alert severity=\"error\">\n                      <AlertTitle>Error</AlertTitle>{errorMessage}</Alert>\n                  </Box>\n                }\n                {successMessage &&\n                  <Box mt={5}>\n                    <Alert severity=\"success\">\n                      <AlertTitle>Success</AlertTitle>{successMessage}</Alert>\n                  </Box>\n                }\n                {/* <Box mt={5}>\n                  <Copyright />\n                </Box> */}\n              </form>\n            </div>\n          </Grid>\n          <Grid item xs={2} sm={2} md={2}></Grid>\n        </Grid>\n        <br></br>\n      </Paper>\n      <Box className={classes.fixedHeight}></Box>\n    </React.Fragment>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Containers/FacultyMemberForm.js",["249"],"/Users/azibzahid/Desktop/cms/client/src/pages/admin/Containers/FacultyList.js",["250","251","252","253","254","255","256","257","258","259"],"import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Axios from 'axios';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst faculty_id = localStorage.getItem('id');\nconst authToken = localStorage.getItem('x-auth-token');\nvar faculties = [];\nvar facultiesWithDean = [];\nvar facultyMembers = [];\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 40,\n  },\n  deleteButton: {\n    color: theme.palette.error.contrastText,\n    backgroundColor: theme.palette.error.main,\n    \"&:hover\":{\n      backgroundColor: theme.palette.error.dark\n    },\n  },\n  dialogTitle: {\n    color: theme.palette.primary.main,\n  }\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n    //   backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nexport default function FacultyList() {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const [isSelected, setIsSelected] = useState(false);\n  const [facultySelected, setFacultySelected] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const [name, setName] = useState(\"\");\n  const [location, setLocation] = useState(\" \");\n  const [dean_id, setDeanId] = useState();\n  const [contact_phone, setContactPhone] = useState(\"\");\n  const [contact_email, setContactEmail] = useState(\"\");\n\n  const retrieveFacultyDean = (faculty_name) => {\n    return new Promise((resolve, reject) => {\n        Axios.get(`http://localhost:4000/api/faculty/${faculty_name}/dean`, {})\n        .then((response) => {\n          if(response.status == 200){\n            facultiesWithDean.push(response.data.data[0]);\n          }\n        })\n        .then((data) => {\n          resolve(data);\n        })\n        .catch((e) => {\n          console.log(e);\n        })\n    });\n  }\n\n  const retrieveFaculties = () => {\n    facultiesWithDean = [];\n    faculties = [];\n  \n    Axios.get(`http://localhost:4000/api/faculty`, {})\n    .then((response) => {\n      if(response.status == 200) {\n        faculties = response.data.data;\n        \n        let requests = [];\n        faculties.forEach(faculty => {\n          requests.push(retrieveFacultyDean(faculty.name));\n        });\n\n        Promise.all(requests).then(() => {\n            setLoading(false);\n            console.log(faculties);\n            console.log(facultiesWithDean);\n        })\n      }\n    }).catch((e) => {\n      console.log(e);\n    });\n  }\n\n//   if (facultiesWithDean.length != 0 && faculties.length != 0) {\n//     setLoading(false);\n//   }\n\n  if (loading) retrieveFaculties();\n\n  const getIndex = (name) => {\n    console.log(name);\n    var res;\n    facultiesWithDean.forEach((faculty, index) => {\n      if (name == faculty.name) {\n        res = index;\n      }\n    });\n    return res;\n  }\n\n  const handleClick = (event, faculty_name) => {\n      setIsSelected(true);\n      setFacultySelected(faculty_name);\n      retrieveFacultyMembers(faculty_name);\n  }\n\n  const deleteFaculty = (event, faculty_name) => {\n    event.stopPropagation()\n    setErrorMessage(null);\n    setSuccessMessage(null);\n    Axios.delete(`http://localhost:4000/api/faculty/${faculty_name}`, {\n      headers: {\n        'x-auth-token': authToken\n      },\n    })\n    .then((response) => {\n      console.log(response);\n      if(response.status == 200) {\n        const successMessage = response.data.message;\n        console.log(successMessage);\n        setSuccessMessage(successMessage);\n        window.location.reload();\n      }\n    }).catch((e) => {\n      if (e.response && e.response.data) {\n        const errorMessage = e.response.data.err || e.response.data.message;\n        console.log(errorMessage);\n        setErrorMessage(errorMessage);\n      }\n    });\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  \n\n  const retrieveFacultyMembers= (faculty_name) => {\n    facultyMembers = [];\n    Axios.get(`http://localhost:4000/api/faculty/${faculty_name}/members`, {})\n    .then((response) => {\n      if(response.status == 200){\n        const faculty = response.data.data;\n        console.log(faculty);\n        facultyMembers = faculty.faculty_members;\n        setName(faculty.name);\n        setLocation(faculty.location);\n        setDeanId(faculty.dean_id);\n        setContactPhone(faculty.contact_phone);\n        setContactEmail(faculty.contact_email);\n      }\n    })\n    .catch((e) => {\n      console.log(e);\n    });\n  }\n  \n  const editFacultyDialog = (event, faculty_name) => {\n    event.stopPropagation();\n    console.log('clicked');\n    setOpen(true);\n  }\n\n  const editFaculty = () => {\n    setOpen(false);\n    console.log('Dialog closed');\n    Axios.put(`http://localhost:4000/api/faculty/${name}`, {\n      name: name,\n      location: location,\n      dean_id: dean_id,\n      contact_phone: contact_phone,\n      contact_email: contact_email,\n    }, {\n      headers: {\n        'x-auth-token': authToken\n      },\n    }).then((response) => {\n      console.log(response);\n      if(response.data.success) {\n        setSuccessMessage(\"Faculty Added Successful\");\n        console.log(response.data);\n        window.location.href=\"/admin/Faculties\";\n      }\n    }).catch((e) => {\n      if (e.response && e.response.data) {\n        const errorMessage = e.response.data.err || e.response.data.message;\n        console.log(e.response);\n        setErrorMessage(errorMessage);\n      }\n    })\n  }\n\n  \n\n  return (\n    <React.Fragment>\n      <Paper className={classes.paper} elevation={6}>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>Departments</Typography>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"center\">S#</StyledTableCell>\n              <StyledTableCell align=\"center\">Department</StyledTableCell>\n              <StyledTableCell align=\"center\">Dean</StyledTableCell>\n              <StyledTableCell align=\"center\">Location</StyledTableCell>\n              <StyledTableCell align=\"center\">Contact Email</StyledTableCell>\n              <StyledTableCell align=\"center\">Contact Phone #</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          {loading ? <div>Loading...</div>\n            :\n            <TableBody>\n              {facultiesWithDean.map((faculty, index) => (\n                <StyledTableRow hover key={faculty.name} onClick={(event) => handleClick(event, faculty.name)}>\n                  <StyledTableCell align=\"center\">{index + 1}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{faculty.name}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{faculty.dean_id ? faculty.dean.name : 'N/A'}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{faculty.location ? faculty.location : 'N/A'}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{faculty.contact_email}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{faculty.contact_phone}</StyledTableCell>\n                </StyledTableRow >\n              ))}\n            </TableBody>\n          }\n        </Table>\n        <br></br>\n      </Paper>\n      <Box className={classes.fixedHeight}></Box>\n      {!isSelected \n        ? \n        <div>\n          <Typography component=\"h2\" color=\"primary\" gutterBottom>Please select a Faculty to check the details</Typography>\n        </div>\n        :\n        <div>\n          <Paper className={classes.paper} elevation={6}>\n            <Box display=\"flex\" p={1} bgcolor=\"background.paper\">\n                <Box p={1} flexGrow={1}>\n                  <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>{facultiesWithDean[getIndex(facultySelected)].name}</Typography>\n                </Box>\n                <Box p={1}>\n                  <Button variant=\"contained\" color=\"primary\" onClick={(event) => editFacultyDialog(event, facultiesWithDean[getIndex(facultySelected)].name)}>Edit</Button>\n                </Box>\n                <Box p={1}>\n                  <Button variant=\"contained\" className={classes.deleteButton} onClick={(event) => deleteFaculty(event, facultiesWithDean[getIndex(facultySelected)].name)}>Delete</Button>\n                </Box>\n            </Box>\n            <br></br>\n            <Table size=\"small\">\n              <TableBody>\n                  <StyledTableRow  key={1}>\n                    <StyledTableCell align=\"left\">Dean: {facultiesWithDean[getIndex(facultySelected)].dean_id ? facultiesWithDean[getIndex(facultySelected)].dean.name : 'N/A'}</StyledTableCell>\n                  </StyledTableRow >\n                  <StyledTableRow  key={2}>\n                    <StyledTableCell align=\"left\">Location: {facultiesWithDean[getIndex(facultySelected)].location ? facultiesWithDean[getIndex(facultySelected)].location : 'N/A'}</StyledTableCell>\n                  </StyledTableRow >\n                  <StyledTableRow  key={3}>\n                    <StyledTableCell align=\"left\">Contact Email: {facultiesWithDean[getIndex(facultySelected)].contact_email}</StyledTableCell>\n                  </StyledTableRow >\n                  <StyledTableRow  key={4}>\n                    <StyledTableCell align=\"left\">Contact Phone: {facultiesWithDean[getIndex(facultySelected)].contact_phone}</StyledTableCell>\n                  </StyledTableRow >\n              </TableBody>\n            </Table>\n            <br></br>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>Faculty Members</Typography>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell align=\"center\">S#</StyledTableCell>\n                  <StyledTableCell align=\"center\">Name</StyledTableCell>\n                  <StyledTableCell align=\"center\">Designation</StyledTableCell>\n                  <StyledTableCell align=\"center\">Email</StyledTableCell>\n                  <StyledTableCell align=\"center\">Phone #</StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {facultyMembers.map((faculty_member, index) => (\n                  <StyledTableRow hover key={faculty_member.name} >\n                    <StyledTableCell align=\"center\">{index + 1}</StyledTableCell>\n                    <StyledTableCell align=\"center\">{faculty_member.name}</StyledTableCell>\n                    <StyledTableCell align=\"center\">{faculty_member.designation}</StyledTableCell>\n                    <StyledTableCell align=\"center\">{faculty_member.email}</StyledTableCell>\n                    <StyledTableCell align=\"center\">{faculty_member.phone}</StyledTableCell>\n                  </StyledTableRow >\n                ))}\n              </TableBody>\n            </Table>\n            <br></br>\n          </Paper>\n          <Box className={classes.fixedHeight}></Box>\n          {errorMessage &&\n            <Box mt={5}>\n              <Alert severity=\"error\">\n                <AlertTitle>Error</AlertTitle>{errorMessage}</Alert>\n            </Box>\n          }\n          {successMessage &&\n            <Box mt={5}>\n              <Alert severity=\"success\">\n                <AlertTitle>Success</AlertTitle>{successMessage}</Alert>\n            </Box>\n          }\n          <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\" className={classes.dialogTitle}>Edit Faculty</DialogTitle>\n            <DialogContent>\n              <form className={classes.form} noValidate>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"Name\"\n                  name=\"name\"\n                  autoComplete=\"name\"\n                  value={name}\n                  autoFocus\n                  onChange={(e) => {\n                    setName(e.target.value);\n                  }}\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  id=\"location\"\n                  label=\"Location\"\n                  name=\"location\"\n                  autoComplete=\"location\"\n                  value={location}\n                  onChange={(e) => {\n                    setLocation(e.target.value);\n                  }}\n                />\n                <TextField\n                  classes={{ root: classes.root }}\n                  select\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  name=\"userRoles\"\n                  id=\"userRoles\"\n                  variant=\"outlined\"\n                  label=\"Faculty Dean\"\n                  value={dean_id}\n                  onChange={(e) => {\n                    setDeanId(e.target.value);\n                  }}\n                >\n                  <MenuItem value={null}>\n                    <em>None</em>\n                  </MenuItem>\n                  {facultyMembers.map((facultyMember, index) => (\n                    <MenuItem value={facultyMember.id}>{facultyMember.name}</MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"contact_phone\"\n                  label=\"Contact No.\"\n                  name=\"contact_phone\"\n                  autoComplete=\"contact-phone\"\n                  value={contact_phone}\n                  onChange={(e) => {\n                    setContactPhone(e.target.value);\n                  }}\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"contact_email\"\n                  label=\"Contact Email Address\"\n                  name=\"contact_email\"\n                  autoComplete=\"contact-email\"\n                  value={contact_email}\n                  onChange={(e) => {\n                    setContactEmail(e.target.value);\n                  }}\n                />\n                <Box className={classes.fixedHeight}></Box>\n                <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\n                  <Grid item xs={5} sm={5} md={5}>\n                    <Button\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.submit}\n                      onClick={handleClose}\n                    >\n                      Cancel\n                    </Button>\n                  </Grid>\n                  <Grid item xs={1} sm={1} md={1}></Grid>\n                  <Grid item xs={5} sm={5} md={5}>\n                    <Button\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.submit}\n                      onClick={editFaculty}\n                    >\n                      Submit\n                    </Button>\n                  </Grid>\n                </Grid>\n                {errorMessage &&\n                  <Box mt={5}>\n                    <Alert severity=\"error\">\n                      <AlertTitle>Error</AlertTitle>{errorMessage}</Alert>\n                  </Box>\n                }\n                {successMessage &&\n                  <Box mt={5}>\n                    <Alert severity=\"success\">\n                      <AlertTitle>Success</AlertTitle>{successMessage}</Alert>\n                  </Box>\n                }\n              </form>\n            </DialogContent>\n            <Box className={classes.fixedHeight}></Box>\n          </Dialog>\n        </div>\n      }\n    </React.Fragment>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Containers/StudentForm.js",["260","261"],"import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nconst authToken = localStorage.getItem('x-auth-token');\nvar faculties = [];\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 40,\n  },\n  deleteButton: {\n    color: theme.palette.error.contrastText,\n    backgroundColor: theme.palette.error.main,\n    \"&:hover\":{\n      backgroundColor: theme.palette.error.dark\n    },\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nexport default function StudentForm() {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n\n  const currentDate = new Date();\n  const [reg_no, setRegNo] = useState();\n  const [name, setName] = useState(\"\");\n  const [faculty_name, setFacultyName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [batch, setBatch] = useState();\n  const [gender, setGender] = useState(\"\");\n  const [dob, setDob] = useState(currentDate);\n  const [password, setPassword] = useState(\"\");\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const addStudent = () => {\n    setErrorMessage(null);\n    setSuccessMessage(null);\n    Axios.post('http://localhost:4000/api/student', {\n      reg_no: reg_no,\n      name: name,\n      faculty_name: faculty_name,\n      phone: phone,\n      email: email,\n      password: password,\n      dob: dob,\n      address: address,\n      batch: batch,\n      gender: gender\n    }, {\n      headers: {\n        'x-auth-token': authToken\n      },\n    }).then((response) => {\n      console.log(response);\n      if(response.data.success) {\n        setSuccessMessage(\"Student Added Successfuly\");\n        console.log(response.data);\n        window.location.href=\"/admin/students\";\n      }\n    }).catch((e) => {\n      if (e.response && e.response.data) {\n        const errorMessage = e.response.data.err || e.response.data.message;\n        console.log(e.response);\n        setErrorMessage(errorMessage);\n      }\n    })\n  }\n\n  const retrieveFaculties = () => {\n    faculties = [];\n  \n    Axios.get(`http://localhost:4000/api/faculty`, {})\n    .then((response) => {\n      if(response.status == 200) {\n        faculties = response.data.data;\n            \n        setLoading(false);\n        console.log(faculties);\n      }\n    }).catch((e) => {\n      console.log(e);\n    });\n  }\n\n  if (loading) retrieveFaculties();\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.paper} elevation={6}>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>Add Student</Typography>\n        {loading ? <div>Loading...</div>\n          :\n          <Grid container>\n            <Grid item xs={2} sm={2} md={2}></Grid>\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n              <Grid item xs={8} sm={8} md={8} container direction=\"column\" alignItems=\"center\" justify=\"center\" square>\n                <div>\n                  <form className={classes.form} noValidate>\n                    <TextField\n                        classes={{ root: classes.root }}\n                        select\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"faculty_name\"\n                        id=\"faculty_name\"\n                        variant=\"outlined\"\n                        label=\"Faculty\"\n                        onChange={(e) => {\n                        setFacultyName(e.target.value);\n                        }}\n                    >\n                        {faculties.map((faculty, index) => (\n                        <MenuItem value={faculty.name}>{faculty.name}</MenuItem>\n                        ))}\n                    </TextField>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"reg_no\"\n                        label=\"Registration No\"\n                        name=\"reg_no\"\n                        autoComplete=\"reg_no\"\n                        onChange={(e) => {\n                        setRegNo(e.target.value);\n                        }}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\"\n                        autoComplete=\"name\"\n                        onChange={(e) => {\n                        setName(e.target.value);\n                        }}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        id=\"phone\"\n                        label=\"Phone\"\n                        name=\"phone\"\n                        autoComplete=\"phone\"\n                        onChange={(e) => {\n                        setPhone(e.target.value);\n                        }}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        onChange={(e) => {\n                        setEmail(e.target.value);\n                        }}\n                    />\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      id=\"password\"\n                      label=\"Password\"\n                      name=\"password\"\n                      type=\"password\"\n                      autoComplete=\"contact-email\"\n                      onChange={(e) => {\n                        setPassword(e.target.value);\n                      }}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        id=\"address\"\n                        label=\"Address\"\n                        name=\"address\"\n                        autoComplete=\"address\"\n                        onChange={(e) => {\n                        setAddress(e.target.value);\n                        }}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"batch\"\n                        label=\"Batch\"\n                        name=\"batch\"\n                        autoComplete=\"batch\"\n                        onChange={(e) => {\n                        setBatch(e.target.value);\n                        }}\n                    />\n                    <div>\n                        <FormLabel>Gender</FormLabel>\n                        <RadioGroup \n                            row\n                            aria-label=\"gender\" \n                            name=\"gender1\"\n                            onChange={(e) => {\n                            setGender(e.target.value);\n                            }}\n                            >\n                            <FormControlLabel value=\"F\" control={<Radio color=\"primary\"/>} label=\"Female\" />\n                            <FormControlLabel value=\"M\" control={<Radio color=\"primary\"/>} label=\"Male\" />\n                            <FormControlLabel value=\"O\" control={<Radio color=\"primary\"/>} label=\"Other\" />\n                        </RadioGroup>\n                    </div>\n                    <KeyboardDatePicker\n                        margin=\"normal\"\n                        id=\"date-picker-dialog\"\n                        label=\"Date of Birth\"\n                        format=\"MM-DD-yyyy\"\n                        inputVariant=\"outlined\"\n                        fullWidth\n                        value={dob}\n                        onChange={(date) => {\n                            setDob(date)\n                        }}\n                        KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                        }}\n                    />\n                    <Button\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.submit}\n                      onClick={addStudent}\n                    >\n                      Add Student\n                    </Button>\n                    {errorMessage &&\n                      <Box mt={5}>\n                        <Alert severity=\"error\">\n                          <AlertTitle>Error</AlertTitle>{errorMessage}</Alert>\n                      </Box>\n                    }\n                    {successMessage &&\n                      <Box mt={5}>\n                        <Alert severity=\"success\">\n                          <AlertTitle>Success</AlertTitle>{successMessage}</Alert>\n                      </Box>\n                    }\n                  </form>\n                </div>\n              </Grid>\n            </MuiPickersUtilsProvider>\n            <Grid item xs={2} sm={2} md={2}></Grid>\n          </Grid>\n\n        }\n        <br></br>\n      </Paper>\n      <Box className={classes.fixedHeight}></Box>\n    </React.Fragment>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Containers/StudentList.js",["262","263","264","265","266","267","268","269"],"import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Axios from 'axios';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\nconst faculty_id = localStorage.getItem('id');\nconst authToken = localStorage.getItem('x-auth-token');\nvar students = [];\nvar faculties = [];\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 40,\n  },\n  deleteButton: {\n    color: theme.palette.error.contrastText,\n    backgroundColor: theme.palette.error.main,\n    \"&:hover\":{\n      backgroundColor: theme.palette.error.dark\n    },\n  },\n  dialogTitle: {\n    color: theme.palette.primary.main,\n  }\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n    //   backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nexport default function StudentList() {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const [isSelected, setIsSelected] = useState(false);\n  const [studentSelected, setStudentSelected] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [open, setOpen] = React.useState(false);\n\n  const [name, setName] = useState(\"\");\n  const [faculty_name, setFacultyName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [batch, setBatch] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n\n  const retrieveStudents = () => {\n    students = [];\n  \n    Axios.get(`http://localhost:4000/api/student`, {})\n    .then((response) => {\n      if(response.status == 200) {\n        students = response.data.data;\n        setLoading(false);\n        console.log(students);\n      }\n    }).catch((e) => {\n      console.log(e);\n    });\n  }\n\n  if (loading) retrieveStudents();\n\n  const getIndex = (reg_no) => {\n    console.log(reg_no);\n    var res;\n    students.forEach((student, index) => {\n      if (reg_no == student.reg_no) {\n        res = index;\n      }\n    });\n    return res;\n  }\n\n  const retrieveFaculties = () => {\n    faculties = [];\n  \n    Axios.get(`http://localhost:4000/api/faculty`, {})\n    .then((response) => {\n      if(response.status == 200) {\n        faculties = response.data.data;\n        console.log(faculties);\n      }\n    }).catch((e) => {\n      console.log(e);\n    });\n  }\n\n  const handleClick = (event, reg_no) => {\n      setIsSelected(true);\n      setStudentSelected(reg_no);\n      retrieveFaculties();\n  }\n\n  const deleteFaculty = (event, reg_no) => {\n    event.stopPropagation()\n    setErrorMessage(null);\n    setSuccessMessage(null);\n    console.log('delete clicked');\n    Axios.delete(`http://localhost:4000/api/student/${reg_no}`, {\n      headers: {\n        'x-auth-token': authToken\n      },\n    })\n    .then((response) => {\n      console.log(response);\n      if(response.status == 200) {\n        const successMessage = response.data.message;\n        console.log(successMessage);\n        setSuccessMessage(successMessage);\n        window.location.reload();\n      }\n    }).catch((e) => {\n      if (e.response && e.response.data) {\n        const errorMessage = e.response.data.err || e.response.data.message;\n        console.log(errorMessage);\n        setErrorMessage(errorMessage);\n      }\n    });\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  const editFacultyDialog = (event, reg_no) => {\n    event.stopPropagation();\n    console.log('edit clicked');\n    setName(students[getIndex(reg_no)].name);\n    setFacultyName(students[getIndex(reg_no)].faculty_name);\n    setPhone(students[getIndex(reg_no)].phone);\n    setEmail(students[getIndex(reg_no)].email);\n    setDob(students[getIndex(reg_no)].dob);\n    setAddress(students[getIndex(reg_no)].address);\n    setBatch(students[getIndex(reg_no)].batch);\n    setGender(students[getIndex(reg_no)].gender);\n    setOpen(true);\n  }\n\n  const editFaculty = () => {\n    setOpen(false);\n    console.log('Dialog closed');\n    Axios.put(`http://localhost:4000/api/student/${studentSelected}`, {\n      faculty_name: faculty_name,\n      name: name,\n      phone: phone,\n      email: email,\n      dob: dob,\n      address: address,\n      batch: batch,\n      gender: gender\n    }, {\n      headers: {\n        'x-auth-token': authToken\n      },\n    }).then((response) => {\n      console.log(response);\n      if(response.data.success) {\n        setSuccessMessage(\"Faculty Member Info Updated Successfully\");\n        console.log(response.data);\n        window.location.href=\"/admin/students\";\n      }\n    }).catch((e) => {\n      console.log(e.response);\n      if (e.response && e.response.data) {\n        const errorMessage = e.response.data.err || e.response.data.message;\n        console.log(e.response);\n        setErrorMessage(errorMessage);\n      }\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.paper} elevation={6}>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>Students</Typography>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"center\">S#</StyledTableCell>\n              <StyledTableCell align=\"center\">Name</StyledTableCell>\n              <StyledTableCell align=\"center\">Faculty</StyledTableCell>\n              <StyledTableCell align=\"center\">Email</StyledTableCell>\n              <StyledTableCell align=\"center\">Batch</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          {loading ? <div>Loading...</div>\n            :\n            <TableBody>\n              {students.map((student, index) => (\n                <StyledTableRow hover key={student.name} onClick={(event) => handleClick(event, student.reg_no)}>\n                  <StyledTableCell align=\"center\">{index + 1}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{student.name}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{student.faculty_name}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{student.email}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{student.batch}</StyledTableCell>\n                </StyledTableRow >\n              ))}\n            </TableBody>\n          }\n        </Table>\n        <br></br>\n      </Paper>\n      <Box className={classes.fixedHeight}></Box>\n      {!isSelected \n        ? \n        <div>\n          <Typography component=\"h2\" color=\"primary\" gutterBottom>Please select a Student to check the details</Typography>\n        </div>\n        :\n        <div>\n          <Paper className={classes.paper} elevation={6}>\n            <Box display=\"flex\" p={1} bgcolor=\"background.paper\">\n                <Box p={1} flexGrow={1}>\n                  <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>{students[getIndex(studentSelected)].name}</Typography>\n                </Box>\n                <Box p={1}>\n                  <Button variant=\"contained\" color=\"primary\" onClick={(event) => editFacultyDialog(event, students[getIndex(studentSelected)].reg_no)}>Edit</Button>\n                </Box>\n                <Box p={1}>\n                  <Button variant=\"contained\" className={classes.deleteButton} onClick={(event) => deleteFaculty(event, students[getIndex(studentSelected)].reg_no)}>Delete</Button>\n                </Box>\n            </Box>\n            <br></br>\n            <Table size=\"small\">\n              <TableBody>\n                <StyledTableRow  key={1}>\n                    <StyledTableCell align=\"left\">Faculty Name: {students[getIndex(studentSelected)].faculty_name}</StyledTableCell>\n                    <StyledTableCell align=\"left\">Email: {students[getIndex(studentSelected)].email}</StyledTableCell>\n                </StyledTableRow >\n                <StyledTableRow  key={2}>\n                    <StyledTableCell align=\"left\">Registration No: {students[getIndex(studentSelected)].reg_no}</StyledTableCell>\n                    <StyledTableCell align=\"left\">Phone: {students[getIndex(studentSelected)].phone}</StyledTableCell>\n                </StyledTableRow >\n                <StyledTableRow  key={3}>\n                    <StyledTableCell align=\"left\">CGPA: {students[getIndex(studentSelected)].cgpa}</StyledTableCell>\n                    <StyledTableCell align=\"left\">Date of Birth: {students[getIndex(studentSelected)].dob.substring(0,10)}</StyledTableCell>\n                </StyledTableRow >\n                <StyledTableRow  key={4}>\n                    <StyledTableCell align=\"left\">Batch: {students[getIndex(studentSelected)].batch}</StyledTableCell>\n                    <StyledTableCell align=\"left\">Address: {students[getIndex(studentSelected)].address}</StyledTableCell>\n                </StyledTableRow >\n                <StyledTableRow  key={5}>\n                    <StyledTableCell align=\"left\">Gender: {students[getIndex(studentSelected)].gender == 'M' ? 'Male' : 'Female'}</StyledTableCell>\n                    <StyledTableCell align=\"left\"></StyledTableCell>\n                </StyledTableRow >\n              </TableBody>\n            </Table>\n            <br></br>\n          </Paper>\n          <Box className={classes.fixedHeight}></Box>\n          {errorMessage &&\n            <Box mt={5}>\n              <Alert severity=\"error\">\n                <AlertTitle>Error</AlertTitle>{errorMessage}</Alert>\n            </Box>\n          }\n          {successMessage &&\n            <Box mt={5}>\n              <Alert severity=\"success\">\n                <AlertTitle>Success</AlertTitle>{successMessage}</Alert>\n            </Box>\n          }\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n              <DialogTitle id=\"form-dialog-title\" className={classes.dialogTitle}>Edit Faculty Member</DialogTitle>\n              <DialogContent>\n                <form className={classes.form} noValidate>\n                  <TextField\n                    classes={{ root: classes.root }}\n                    select\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    fullWidth\n                    name=\"faculty_name\"\n                    id=\"faculty_name\"\n                    variant=\"outlined\"\n                    label=\"Faculty\"\n                    value={faculty_name}\n                    onChange={(e) => {\n                      setFacultyName(e.target.value);\n                    }}\n                  >\n                    {faculties.map((faculty, index) => (\n                      <MenuItem value={faculty.name}>{faculty.name}</MenuItem>\n                    ))}\n                  </TextField>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"name\"\n                    label=\"Name\"\n                    name=\"name\"\n                    autoComplete=\"name\"\n                    value={name}\n                    onChange={(e) => {\n                      setName(e.target.value);\n                    }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    fullWidth\n                    id=\"phone\"\n                    label=\"Phone\"\n                    name=\"phone\"\n                    autoComplete=\"phone\"\n                    value={phone}\n                    onChange={(e) => {\n                      setPhone(e.target.value);\n                    }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    value={email}\n                    onChange={(e) => {\n                      setEmail(e.target.value);\n                    }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    fullWidth\n                    id=\"address\"\n                    label=\"Address\"\n                    name=\"address\"\n                    autoComplete=\"address\"\n                    value={address}\n                    onChange={(e) => {\n                      setAddress(e.target.value);\n                    }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"batch\"\n                    label=\"Batch\"\n                    name=\"batch\"\n                    autoComplete=\"batch\"\n                    value={batch}\n                    onChange={(e) => {\n                      setBatch(e.target.value);\n                    }}\n                  />\n                  <div>\n                    <FormLabel>Gender</FormLabel>\n                    <RadioGroup \n                        row\n                        aria-label=\"gender\" \n                        name=\"gender1\"\n                        value={gender}\n                        onChange={(e) => {\n                          setGender(e.target.value);\n                        }}\n                        >\n                        <FormControlLabel value=\"F\" control={<Radio color=\"primary\"/>} label=\"Female\" />\n                        <FormControlLabel value=\"M\" control={<Radio color=\"primary\"/>} label=\"Male\" />\n                        <FormControlLabel value=\"O\" control={<Radio color=\"primary\"/>} label=\"Other\" />\n                    </RadioGroup>\n                  </div>\n                  <KeyboardDatePicker\n                    margin=\"normal\"\n                    id=\"date-picker-dialog\"\n                    label=\"Date of Birth\"\n                    format=\"MM-DD-yyyy\"\n                    value={dob}\n                    inputVariant=\"outlined\"\n                    fullWidth\n                    onChange={(date) => {\n                      setDob(date)\n                    }}\n                    KeyboardButtonProps={{\n                      'aria-label': 'change date',\n                    }}\n                  />\n                  <Box className={classes.fixedHeight}></Box>\n                  <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\n                    <Grid item xs={5} sm={5} md={5}>\n                      <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleClose}\n                      >\n                        Cancel\n                      </Button>\n                    </Grid>\n                    <Grid item xs={1} sm={1} md={1}></Grid>\n                    <Grid item xs={5} sm={5} md={5}>\n                      <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={editFaculty}\n                      >\n                        Submit\n                      </Button>\n                    </Grid>\n                  </Grid>\n                  {errorMessage &&\n                    <Box mt={5}>\n                      <Alert severity=\"error\">\n                        <AlertTitle>Error</AlertTitle>{errorMessage}</Alert>\n                    </Box>\n                  }\n                  {successMessage &&\n                    <Box mt={5}>\n                      <Alert severity=\"success\">\n                        <AlertTitle>Success</AlertTitle>{successMessage}</Alert>\n                    </Box>\n                  }\n                </form>\n              </DialogContent>\n              <Box className={classes.fixedHeight}></Box>\n            </Dialog>\n          </MuiPickersUtilsProvider>\n        </div>\n      }\n    </React.Fragment>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/admin/Containers/FacultyMemberList.js",["270","271","272","273","274","275","276","277","278"],"import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Axios from 'axios';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\n\nconst faculty_id = localStorage.getItem('id');\nconst authToken = localStorage.getItem('x-auth-token');\nvar faculty_members = [];\nvar faculties = [];\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 40,\n  },\n  deleteButton: {\n    color: theme.palette.error.contrastText,\n    backgroundColor: theme.palette.error.main,\n    \"&:hover\":{\n      backgroundColor: theme.palette.error.dark\n    },\n  },\n  dialogTitle: {\n    color: theme.palette.primary.main,\n  }\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n    //   backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nexport default function FacultyMemberList() {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const [isSelected, setIsSelected] = useState(false);\n  const [facultyMemberSelected, setFacultyMemberSelected] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [open, setOpen] = React.useState(false);\n\n  const [name, setName] = useState(\"\");\n  const [faculty_name, setFacultyName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [designation, setDesignation] = useState(\"\");\n\n  const retrieveFacultyMembers = () => {\n    faculty_members = [];\n  \n    Axios.get(`http://localhost:4000/api/faculty-member`, {})\n    .then((response) => {\n      if(response.status == 200) {\n        faculty_members = response.data.data;\n        setLoading(false);\n        console.log(faculty_members);\n      }\n    }).catch((e) => {\n      console.log(e);\n    });\n  }\n\n  if (loading) retrieveFacultyMembers();\n\n  const getIndex = (id) => {\n    console.log(id);\n    var res;\n    faculty_members.forEach((faculty_member, index) => {\n      if (id == faculty_member.id) {\n        res = index;\n      }\n    });\n    return res;\n  }\n\n  const retrieveFaculties = () => {\n    faculties = [];\n  \n    Axios.get(`http://localhost:4000/api/faculty`, {})\n    .then((response) => {\n      if(response.status == 200) {\n        faculties = response.data.data;\n\n        console.log(faculties);\n      }\n    }).catch((e) => {\n      console.log(e);\n    });\n  }\n\n  const handleClick = (event, faculty_member_id) => {\n      setIsSelected(true);\n      setFacultyMemberSelected(faculty_member_id);\n      retrieveFaculties();\n  }\n\n  const deleteFaculty = (event, faculty_member_id) => {\n    event.stopPropagation()\n    setErrorMessage(null);\n    setSuccessMessage(null);\n    console.log('delete clicked');\n    Axios.delete(`http://localhost:4000/api/faculty-member/${faculty_member_id}`, {\n      headers: {\n        'x-auth-token': authToken\n      },\n    })\n    .then((response) => {\n      console.log(response);\n      if(response.status == 200) {\n        const successMessage = response.data.message;\n        console.log(successMessage);\n        setSuccessMessage(successMessage);\n        window.location.reload();\n      }\n    }).catch((e) => {\n      if (e.response && e.response.data) {\n        const errorMessage = e.response.data.err || e.response.data.message;\n        console.log(errorMessage);\n        setErrorMessage(errorMessage);\n      }\n    });\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  const editFacultyDialog = (event, faculty_member_id) => {\n    event.stopPropagation();\n    console.log('edit clicked');\n    setName(faculty_members[getIndex(faculty_member_id)].name);\n    setFacultyName(faculty_members[getIndex(faculty_member_id)].faculty_name);\n    setPhone(faculty_members[getIndex(faculty_member_id)].phone);\n    setEmail(faculty_members[getIndex(faculty_member_id)].email);\n    setDob(faculty_members[getIndex(faculty_member_id)].dob);\n    setAddress(faculty_members[getIndex(faculty_member_id)].address);\n    setDesignation(faculty_members[getIndex(faculty_member_id)].designation);\n    setOpen(true);\n  }\n\n  const editFaculty = () => {\n    setOpen(false);\n    console.log('Dialog closed');\n    Axios.put(`http://localhost:4000/api/faculty-member/${facultyMemberSelected}`, {\n      faculty_name: faculty_name,\n      name: name,\n      phone: phone,\n      email: email,\n      dob: dob,\n      address: address,\n      designation: designation\n    }, {\n      headers: {\n        'x-auth-token': authToken\n      },\n    }).then((response) => {\n      console.log(response);\n      if(response.data.success) {\n        setSuccessMessage(\"Faculty Member Info Updated Successfully\");\n        console.log(response.data);\n        window.location.href=\"/admin/faculty_members\";\n      }\n    }).catch((e) => {\n      console.log(e.response);\n      if (e.response && e.response.data) {\n        const errorMessage = e.response.data.err || e.response.data.message;\n        console.log(e.response);\n        setErrorMessage(errorMessage);\n      }\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.paper} elevation={6}>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>Faculty Members</Typography>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"center\">S#</StyledTableCell>\n              <StyledTableCell align=\"center\">Name</StyledTableCell>\n              <StyledTableCell align=\"center\">Designation</StyledTableCell>\n              <StyledTableCell align=\"center\">Email</StyledTableCell>\n              <StyledTableCell align=\"center\">Phone #</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          {loading ? <div>Loading...</div>\n            :\n            <TableBody>\n              {faculty_members.map((faculty_member, index) => (\n                <StyledTableRow hover key={faculty_member.name} onClick={(event) => handleClick(event, faculty_member.id)}>\n                  <StyledTableCell align=\"center\">{index + 1}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{faculty_member.name}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{faculty_member.designation}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{faculty_member.email}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{faculty_member.phone}</StyledTableCell>\n                </StyledTableRow >\n              ))}\n            </TableBody>\n          }\n        </Table>\n        <br></br>\n      </Paper>\n      <Box className={classes.fixedHeight}></Box>\n      {!isSelected \n        ? \n        <div>\n          <Typography component=\"h2\" color=\"primary\" gutterBottom>Please select a Faculty Member to check the details</Typography>\n        </div>\n        :\n        <div>\n          <Paper className={classes.paper} elevation={6}>\n            <Box display=\"flex\" p={1} bgcolor=\"background.paper\">\n                <Box p={1} flexGrow={1}>\n                  <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>{faculty_members[getIndex(facultyMemberSelected)].name}</Typography>\n                </Box>\n                <Box p={1}>\n                  <Button variant=\"contained\" color=\"primary\" onClick={(event) => editFacultyDialog(event, faculty_members[getIndex(facultyMemberSelected)].id)}>Edit</Button>\n                </Box>\n                <Box p={1}>\n                  <Button variant=\"contained\" className={classes.deleteButton} onClick={(event) => deleteFaculty(event, faculty_members[getIndex(facultyMemberSelected)].id)}>Delete</Button>\n                </Box>\n            </Box>\n            <br></br>\n            <Table size=\"small\">\n              <TableBody>\n                  <StyledTableRow  key={1}>\n                    <StyledTableCell align=\"left\">Faculty Name: {faculty_members[getIndex(facultyMemberSelected)].faculty_name}</StyledTableCell>\n                    <StyledTableCell align=\"left\">Designation: {faculty_members[getIndex(facultyMemberSelected)].designation}</StyledTableCell>\n                  </StyledTableRow >\n                  <StyledTableRow  key={2}>\n                    <StyledTableCell align=\"left\">Email: {faculty_members[getIndex(facultyMemberSelected)].email}</StyledTableCell>\n                    <StyledTableCell align=\"left\">Phone: {faculty_members[getIndex(facultyMemberSelected)].phone}</StyledTableCell>\n                  </StyledTableRow >\n                  <StyledTableRow  key={3}>\n                    <StyledTableCell align=\"left\">Address: {faculty_members[getIndex(facultyMemberSelected)].address}</StyledTableCell>\n                    <StyledTableCell align=\"left\">Date of Birth: {faculty_members[getIndex(facultyMemberSelected)].dob.substring(0,10)}</StyledTableCell>\n                  </StyledTableRow >\n              </TableBody>\n            </Table>\n            <br></br>\n          </Paper>\n          <Box className={classes.fixedHeight}></Box>\n          {errorMessage &&\n            <Box mt={5}>\n              <Alert severity=\"error\">\n                <AlertTitle>Error</AlertTitle>{errorMessage}</Alert>\n            </Box>\n          }\n          {successMessage &&\n            <Box mt={5}>\n              <Alert severity=\"success\">\n                <AlertTitle>Success</AlertTitle>{successMessage}</Alert>\n            </Box>\n          }\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n              <DialogTitle id=\"form-dialog-title\" className={classes.dialogTitle}>Edit Faculty Member</DialogTitle>\n              <DialogContent>\n                <form className={classes.form} noValidate>\n                  <TextField\n                    classes={{ root: classes.root }}\n                    select\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    fullWidth\n                    name=\"faculty_name\"\n                    id=\"faculty_name\"\n                    variant=\"outlined\"\n                    label=\"Faculty\"\n                    value={faculty_name}\n                    onChange={(e) => {\n                      setFacultyName(e.target.value);\n                    }}\n                  >\n                    {faculties.map((faculty, index) => (\n                      <MenuItem value={faculty.name}>{faculty.name}</MenuItem>\n                    ))}\n                  </TextField>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"name\"\n                    label=\"Name\"\n                    name=\"name\"\n                    autoComplete=\"name\"\n                    value={name}\n                    onChange={(e) => {\n                      setName(e.target.value);\n                    }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    fullWidth\n                    id=\"phone\"\n                    label=\"Phone\"\n                    name=\"phone\"\n                    autoComplete=\"phone\"\n                    value={phone}\n                    onChange={(e) => {\n                      setPhone(e.target.value);\n                    }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    value={email}\n                    onChange={(e) => {\n                      setEmail(e.target.value);\n                    }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    fullWidth\n                    id=\"address\"\n                    label=\"Address\"\n                    name=\"address\"\n                    autoComplete=\"address\"\n                    value={address}\n                    onChange={(e) => {\n                      setAddress(e.target.value);\n                    }}\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"designation\"\n                    label=\"Designation\"\n                    name=\"designation\"\n                    autoComplete=\"designation\"\n                    value={designation}\n                    onChange={(e) => {\n                      setDesignation(e.target.value);\n                    }}\n                  />\n                  <KeyboardDatePicker\n                    margin=\"normal\"\n                    id=\"date-picker-dialog\"\n                    label=\"Date of Birth\"\n                    format=\"MM-DD-yyyy\"\n                    value={dob}\n                    inputVariant=\"outlined\"\n                    fullWidth\n                    onChange={(date) => {\n                      setDob(date)\n                    }}\n                    KeyboardButtonProps={{\n                      'aria-label': 'change date',\n                    }}\n                  />\n                  <Box className={classes.fixedHeight}></Box>\n                  <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\n                    <Grid item xs={5} sm={5} md={5}>\n                      <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleClose}\n                      >\n                        Cancel\n                      </Button>\n                    </Grid>\n                    <Grid item xs={1} sm={1} md={1}></Grid>\n                    <Grid item xs={5} sm={5} md={5}>\n                      <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={editFaculty}\n                      >\n                        Submit\n                      </Button>\n                    </Grid>\n                  </Grid>\n                  {errorMessage &&\n                    <Box mt={5}>\n                      <Alert severity=\"error\">\n                        <AlertTitle>Error</AlertTitle>{errorMessage}</Alert>\n                    </Box>\n                  }\n                  {successMessage &&\n                    <Box mt={5}>\n                      <Alert severity=\"success\">\n                        <AlertTitle>Success</AlertTitle>{successMessage}</Alert>\n                    </Box>\n                  }\n                </form>\n              </DialogContent>\n              <Box className={classes.fixedHeight}></Box>\n            </Dialog>\n          </MuiPickersUtilsProvider>\n        </div>\n      }\n    </React.Fragment>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/student/Containers/ResultCards.js",["279","280","281"],"import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Axios from 'axios';\n\nconst reg_no = localStorage.getItem('reg-no');\nvar results = [];\nvar enrollments = [];\nvar courses = [];\nvar student;\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.primary.dark,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\nroot: {\n    '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n    },\n},\n}))(TableRow);\n\nexport default function ResultCards() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(true);\n\n    const retrieveCourse = (eId) => {\n        return new Promise((resolve, reject) => {\n            Axios.get(`http://localhost:4000/api/enrollment/${eId}/course`, {})\n            .then((response) => {\n            if(response.status == 200) {\n                courses.push(response.data.data.section.course);\n            }\n            })\n            .then((data) => {\n              resolve(data);\n            })\n            .catch((e) => {\n              console.log(e);\n            })\n        });\n    }\n\n    const retrieveEnrollments = (semester) => {\n        return new Promise((resolve, reject) => {\n            Axios.get(`http://localhost:4000/api/student/${reg_no}/enrollments/${semester}`, {})\n            .then((response) => {\n            if(response.status == 200) {\n                enrollments = response.data.data.enrollments;\n                console.log(enrollments);\n\n                for (var i = 0; i < enrollments.length; i++) {\n                  var enrollment = enrollments[i];\n\n                  if (!enrollment.grade) {\n                    console.log('grade');\n                    enrollments.splice(i, 1);\n                    i--;\n                  }\n                }\n                let requests = [];\n                enrollments.forEach(enrollment => {\n                    requests.push(retrieveCourse(enrollment.id));\n                });\n\n                Promise.all(requests).then(() => {\n                    setLoading(false);\n                })\n            }\n            })\n            .then((data) => {\n              resolve(data);\n            })\n            .catch((e) => {\n              console.log(e);\n            })\n        });\n    }\n\n    const retrieveResults = () => {\n    results = [];\n    enrollments = [];\n    courses = [];\n    student = null;\n\n    Axios.get(`http://localhost:4000/api/student/${reg_no}/results`, {})\n    .then((response) => {\n      if(response.status == 200) {\n        student = response.data.data;\n        results = student.results;\n        console.log(results);\n\n        let requests = [];\n        results.forEach(result => {\n            requests.push(retrieveEnrollments(result.semester));\n        });\n      }\n    }).catch((e) => {\n      console.log(e);\n    });\n  }\n\n  if (loading) retrieveResults();\n\n  return (\n    <React.Fragment>\n    {loading ? <div>Loading...</div>\n    :\n    \n    <div>\n        {results.map((result, index) => (\n            <div>\n                <Paper className={classes.paper} elevation={6}>\n                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>{result.semester + \" Semester, \" + enrollments[0].academic_year}</Typography>\n                    <Table size=\"small\">\n                        <TableHead>\n                        <TableRow>\n                            <StyledTableCell align=\"center\">Course Code</StyledTableCell>\n                            <StyledTableCell align=\"center\">Course Title</StyledTableCell>\n                            <StyledTableCell align=\"center\">Credit Hours</StyledTableCell>\n                            <StyledTableCell align=\"center\">Grade</StyledTableCell>\n                        </TableRow>\n                        </TableHead>\n                        {loading ? <div>Loading...</div>\n                        :\n                        <TableBody>\n                            {enrollments.map((enrollment, index) => (\n                              <StyledTableRow key={enrollment.id}>\n                                <StyledTableCell align=\"center\">{courses[index].course_code}</StyledTableCell>\n                                <StyledTableCell align=\"center\">{courses[index].name}</StyledTableCell>\n                                <StyledTableCell align=\"center\">{courses[index].credit_hours}</StyledTableCell>\n                                <StyledTableCell align=\"center\">{enrollment.grade}</StyledTableCell>\n                              </StyledTableRow>\n                            ))}\n                        </TableBody>\n                        }\n                    </Table>\n                    <br></br>\n                    <Box display=\"flex\" p={1} bgcolor=\"background.paper\">\n                        <Box p={1} flexGrow={1}><Typography component=\"h2\" color=\"primary\" gutterBottom>GPA: {result.gpa}</Typography></Box>\n                        <Box p={1} flexGrow={1}><Typography component=\"h2\" color=\"primary\" gutterBottom>CGPA: {student.cgpa}</Typography></Box>\n                        <Box p={1}><Typography component=\"h2\" color=\"primary\" gutterBottom>Scholistic Status: {result.scholistic_status}</Typography></Box>\n                    </Box>\n                </Paper>\n                <br></br>\n            </div>\n        ))}\n    </div>\n    }\n    </React.Fragment>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/faculty_member/Containers/listItems.js",["282","283","284","285","286","287","288"],"import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { Link } from 'react-router-dom';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button component={Link} to=\"/faculty_member/dashboard\">\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/faculty_member/courses\">\n      <ListItemIcon>\n        <LibraryBooksIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Courses\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/faculty_member/account\">\n      <ListItemIcon>\n        <AccountCircleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Account\" />\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    {/* <ListSubheader inset>Saved reports</ListSubheader> */}\n    <ListItem button component={Link} to=\"/faculty_member/upload_attendance\">\n      <ListItemIcon>\n        <AddCircleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Upload Attendance\" />\n    </ListItem>\n  </div>\n);","/Users/azibzahid/Desktop/cms/client/src/pages/faculty_member/Containers/Attendance.js",["289","290","291","292","293"],"import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Axios from 'axios';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nconst authToken = localStorage.getItem('x-auth-token');\nconst faculty_id = localStorage.getItem('id');\nvar sections = [];\nvar courses = [];\nvar students = [];\nvar faculty_member;\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 40,\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nexport default function CourseList() {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const [studentsLoading, setStudentsLoading] = useState(true);\n  const [isSelected, setIsSelected] = useState(false);\n  const [courseSelected, setCourseSelected] = useState(\"false\");\n\n  const currentDate = new Date();\n  const [reg_no, setRegNo] = useState();\n  const [section_id, setSectionId] = useState();\n  const [lecture_no, setLectureNo] = useState();\n  const [status, setStatus] = useState(false);\n  const [sstatus, setSStatus] = useState(\"\");\n  const [date, setDate] = useState(currentDate);\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const retrieveCourses = () => {\n    sections = [];\n    courses = [];\n    faculty_member = null;\n  \n    Axios.get(`http://localhost:4000/api/faculty-member/${faculty_id}/courses`, {})\n    .then((response) => {\n      if(response.status == 200) {\n        faculty_member = response.data.data;\n        console.log(faculty_member);\n        \n        sections = faculty_member.sections;\n        console.log(sections);\n\n        sections.forEach(section => {\n          courses.push(section.course);\n        });\n        console.log(courses);\n        setLoading(false);\n      }\n    }).catch((e) => {\n      console.log(e);\n    });\n  }\n\n  if (loading) retrieveCourses();\n\n  const getIndex = (course_code) => {\n    console.log(course_code);\n    var res;\n    courses.forEach((course, index) => {\n      if (course_code == course.course_code) {\n        res = index;\n      }\n    });\n    return res;\n  }\n\n  const retrieveStudents = (course_code) => {\n    students = [];\n    setStudentsLoading(true);\n  \n    Axios.get(`http://localhost:4000/api/course/${course_code}/students`, {})\n    .then((response) => {\n      if(response.status == 200) {\n        const course = response.data.data;\n        const sections = course.sections;\n        var my_section;\n        sections.forEach(section => {\n            if (section.faculty_member_id == faculty_id) {\n                my_section = section;\n            }\n        });\n\n        const enrollments = my_section.enrollments;\n        enrollments.forEach(enrollment => {\n            students.push(enrollment.student);\n        });\n        setStudentsLoading(false);\n        console.log(students);\n      }\n    }).catch((e) => {\n      console.log(e);\n    });\n  }\n\n  const handleClick = (event, course_code) => {\n      setIsSelected(true);\n      setCourseSelected(course_code);\n      retrieveStudents(course_code);\n      setSectionId(sections[getIndex(course_code)].id);\n  }\n\n  const uploadAttendance = () => {\n    setErrorMessage(null);\n    setSuccessMessage(null);\n    Axios.post('http://localhost:4000/api/attendance', {\n        reg_no: reg_no,\n        section_id: section_id,\n        lecture_no: lecture_no,\n        date: date,\n        status: status\n    }, {\n        headers: {\n        'x-auth-token': authToken\n        },\n    }).then((response) => {\n        console.log(response);\n        if(response.data.success) {\n        setSuccessMessage(\"Student Added Successfuly\");\n        console.log(response.data);\n        window.location.href=\"/faculty_member/upload_attendance\";\n        }\n    }).catch((e) => {\n        if (e.response && e.response.data) {\n        const errorMessage = e.response.data.err || e.response.data.message;\n        console.log(e.response);\n        setErrorMessage(errorMessage);\n        }\n    })\n    }\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.paper} elevation={6}>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>Upload Attendance</Typography>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"center\">S#</StyledTableCell>\n              <StyledTableCell align=\"center\">Course Code</StyledTableCell>\n              <StyledTableCell align=\"center\">Course Title</StyledTableCell>\n              <StyledTableCell align=\"center\">Section</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          {loading ? <div>Loading...</div>\n            :\n            <TableBody>\n              {courses.map((course, index) => (\n                <StyledTableRow hover key={course.course_code} onClick={(event) => handleClick(event, course.course_code)}>\n                  <StyledTableCell align=\"center\">{index + 1}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{course.course_code}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{course.name}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{sections[index].name}</StyledTableCell>\n                </StyledTableRow >\n              ))}\n            </TableBody>\n          }\n        </Table>\n        <br></br>\n      </Paper>\n      <Box className={classes.fixedHeight}></Box>\n      {!isSelected \n        ? \n        <div>\n          <Typography component=\"h2\" color=\"primary\" gutterBottom>Please select a Faculty to check the details</Typography>\n        </div>\n        :\n        <div>\n          <Paper className={classes.paper} elevation={6}>\n            <Box display=\"flex\" p={1} bgcolor=\"background.paper\">\n              <Box p={1} flexGrow={1}>\n                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>{courses[getIndex(courseSelected)].name}</Typography>\n              </Box>\n              <Box p={1}>\n                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>{courses[getIndex(courseSelected)].course_code} {sections[getIndex(courseSelected)].name}</Typography>\n              </Box>\n            </Box>\n            <br></br>\n            \n            {studentsLoading ? <div>Loading</div>\n            :\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n                <Grid container>\n                    <Grid item xs={2} sm={2} md={2}></Grid>\n                        <Grid item xs={8} sm={8} md={8} container direction=\"column\" alignItems=\"center\" justify=\"center\" square>\n                        <form className={classes.form} noValidate>\n                            <TextField\n                                classes={{ root: classes.root }}\n                                select\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                fullWidth\n                                name=\"student\"\n                                id=\"student\"\n                                variant=\"outlined\"\n                                label=\"Student\"\n                                onChange={(e) => {\n                                    setRegNo(e.target.value);\n                                }}\n                            >\n                                {students.map((student, index) => (\n                                <MenuItem value={student.reg_no}>{student.reg_no + \": \" + student.name}</MenuItem>\n                                ))}\n                            </TextField>\n                            <div>\n                                <FormLabel>Attendance</FormLabel>\n                                <RadioGroup \n                                    row\n                                    aria-label=\"attendance\" \n                                    name=\"attendance\"\n                                    value={sstatus}\n                                    onChange={(e) => {\n                                        setSStatus(e.target.value);\n                                        if (e.target.value === \"true\") {\n                                            setStatus(true);\n                                        } else if (e.target.value === \"false\") {\n                                            setStatus(false);\n                                        }\n                                    }}\n                                    >\n                                    <FormControlLabel value=\"true\" control={<Radio color=\"primary\"/>} label=\"Present\" />\n                                    <FormControlLabel value=\"false\" control={<Radio color=\"primary\"/>} label=\"Absent\" />\n                                </RadioGroup>\n                            </div>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"lecture_no\"\n                                label=\"Lecture No\"\n                                name=\"lecture_no\"\n                                onChange={(e) => {\n                                    setLectureNo(e.target.value);\n                                }}\n                            />\n                            <KeyboardDatePicker\n                                margin=\"normal\"\n                                id=\"date-picker-dialog\"\n                                label=\"Date\"\n                                format=\"MM-DD-yyyy\"\n                                inputVariant=\"outlined\"\n                                fullWidth\n                                value={date}\n                                onChange={(date) => {\n                                    setDate(date)\n                                }}\n                                KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                                }}\n                            />\n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                onClick={uploadAttendance}\n                            >\n                                Submit\n                            </Button>\n                            {errorMessage &&\n                                <Box mt={5}>\n                                <Alert severity=\"error\">\n                                    <AlertTitle>Error</AlertTitle>{errorMessage}</Alert>\n                                </Box>\n                            }\n                            {successMessage &&\n                                <Box mt={5}>\n                                <Alert severity=\"success\">\n                                    <AlertTitle>Success</AlertTitle>{successMessage}</Alert>\n                                </Box>\n                            }\n                        </form>\n                    </Grid>\n                    <Grid item xs={2} sm={2} md={2}></Grid>\n                </Grid>\n            </MuiPickersUtilsProvider>\n\n            }\n            <br></br>\n          </Paper>\n          <Box className={classes.fixedHeight}></Box>\n        </div>\n      }\n    </React.Fragment>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/faculty_member/Containers/AccountDetails.js",["294"],"import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Axios from 'axios';\n\nconst faculty_id = localStorage.getItem('id');\nvar faculty_member;\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.primary.dark,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\nroot: {\n    '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n    },\n},\n}))(TableRow);\n\nexport default function AccountDetails() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(true);\n\n    const retrieveFacultyMember = () => {\n      faculty_member = null;\n\n      Axios.get(`http://localhost:4000/api/faculty-member/${faculty_id}`, {})\n      .then((response) => {\n        if(response.status == 200) {\n          faculty_member = response.data.data;\n          console.log(faculty_member);\n          setLoading(false);\n        }\n      }).catch((e) => {\n        console.log(e);\n      });\n    }\n\n  if (loading) retrieveFacultyMember();\n\n  return (\n    <React.Fragment>\n    {loading ? <div>Loading...</div>\n    :\n    <div>\n        <Paper className={classes.paper} elevation={6}>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>{faculty_member.name}</Typography>\n            <Table size=\"small\">\n                <TableBody>\n                    <StyledTableRow  key={1}>\n                      <StyledTableCell align=\"left\">Faculty Name: {faculty_member.faculty_name}</StyledTableCell>\n                      <StyledTableCell align=\"left\">Designation: {faculty_member.designation}</StyledTableCell>\n                    </StyledTableRow >\n                    <StyledTableRow  key={2}>\n                      <StyledTableCell align=\"left\">Email: {faculty_member.email}</StyledTableCell>\n                      <StyledTableCell align=\"left\">Phone: {faculty_member.phone}</StyledTableCell>\n                    </StyledTableRow >\n                    <StyledTableRow  key={3}>\n                      <StyledTableCell align=\"left\">Address: {faculty_member.address}</StyledTableCell>\n                      <StyledTableCell align=\"left\">Date of Birth: {faculty_member.dob.substring(0,10)}</StyledTableCell>\n                    </StyledTableRow >\n                </TableBody>\n            </Table>\n            <br></br>\n        </Paper>\n        <br></br>\n    </div>\n    }\n    </React.Fragment>\n  );\n}","/Users/azibzahid/Desktop/cms/client/src/pages/faculty_member/Containers/CourseList.js",["295","296"],"import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Axios from 'axios';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n\nconst faculty_id = localStorage.getItem('id');\nvar sections = [];\nvar courses = [];\nvar faculty_member;\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 40,\n  },\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nexport default function CourseList() {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const [isSelected, setIsSelected] = useState(false);\n  const [courseSelected, setCourseSelected] = useState(\"\");\n\n  const retrieveCourses = () => {\n    sections = [];\n    courses = [];\n    faculty_member = null;\n  \n    Axios.get(`http://localhost:4000/api/faculty-member/${faculty_id}/courses`, {})\n    .then((response) => {\n      if(response.status == 200) {\n        faculty_member = response.data.data;\n        console.log(faculty_member);\n        \n        sections = faculty_member.sections;\n        console.log(sections);\n\n        sections.forEach(section => {\n          courses.push(section.course);\n        });\n        console.log(courses);\n        setLoading(false);\n      }\n    }).catch((e) => {\n      console.log(e);\n    });\n  }\n\n  if (loading) retrieveCourses();\n\n  const getIndex = (course_code) => {\n    console.log(course_code);\n    var res;\n    courses.forEach((course, index) => {\n      if (course_code == course.course_code) {\n        res = index;\n      }\n    });\n    return res;\n  }\n\n  const handleClick = (event, course_code) => {\n      setIsSelected(true);\n      setCourseSelected(course_code);\n  }\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.paper} elevation={6}>\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>Courses</Typography>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"center\">S#</StyledTableCell>\n              <StyledTableCell align=\"center\">Course Code</StyledTableCell>\n              <StyledTableCell align=\"center\">Course Title</StyledTableCell>\n              <StyledTableCell align=\"center\">Section</StyledTableCell>\n              <StyledTableCell align=\"center\">Credit Hours</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          {loading ? <div>Loading...</div>\n            :\n            <TableBody>\n              {courses.map((course, index) => (\n                <StyledTableRow hover key={course.course_code} onClick={(event) => handleClick(event, course.course_code)}>\n                  <StyledTableCell align=\"center\">{index + 1}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{course.course_code}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{course.name}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{sections[index].name}</StyledTableCell>\n                  <StyledTableCell align=\"center\">{course.credit_hours}</StyledTableCell>\n                </StyledTableRow >\n              ))}\n            </TableBody>\n          }\n        </Table>\n        <br></br>\n      </Paper>\n      <Box className={classes.fixedHeight}></Box>\n      {!isSelected \n        ? \n        <div>\n          <Typography component=\"h2\" color=\"primary\" gutterBottom>Please select a Faculty to check the details</Typography>\n        </div>\n        :\n        <div>\n          <Paper className={classes.paper} elevation={6}>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>{courses[getIndex(courseSelected)].name}</Typography>\n            <br></br>\n            <Table size=\"small\">\n              <TableBody>\n                  <StyledTableRow  key={1}>\n                      <StyledTableCell align=\"left\">Faculty: {courses[getIndex(courseSelected)].faculty_name}</StyledTableCell>\n                  </StyledTableRow >\n                  <StyledTableRow  key={2}>\n                      <StyledTableCell align=\"left\">Course Code: {courses[getIndex(courseSelected)].course_code}</StyledTableCell>\n                  </StyledTableRow >\n                  <StyledTableRow  key={3}>\n                      <StyledTableCell align=\"left\">Credit hours: {courses[getIndex(courseSelected)].credit_hours}</StyledTableCell>\n                  </StyledTableRow >\n                  <StyledTableRow  key={4}>\n                      <StyledTableCell align=\"left\">Description: {courses[getIndex(courseSelected)].description}</StyledTableCell>\n                  </StyledTableRow >\n              </TableBody>\n            </Table>\n            <br></br>\n          </Paper>\n          <Box className={classes.fixedHeight}></Box>\n        </div>\n      }\n    </React.Fragment>\n  );\n}",{"ruleId":"297","severity":1,"message":"298","line":62,"column":24,"nodeType":"299","messageId":"300","endLine":62,"endColumn":26},{"ruleId":"297","severity":1,"message":"298","line":64,"column":29,"nodeType":"299","messageId":"300","endLine":64,"endColumn":31},{"ruleId":"297","severity":1,"message":"298","line":66,"column":29,"nodeType":"299","messageId":"300","endLine":66,"endColumn":31},{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","severity":1,"message":"306","line":15,"column":8,"nodeType":"307","messageId":"308","endLine":15,"endColumn":13},{"ruleId":"305","severity":1,"message":"309","line":128,"column":9,"nodeType":"307","messageId":"308","endLine":128,"endColumn":25},{"ruleId":"305","severity":1,"message":"310","line":13,"column":8,"nodeType":"307","messageId":"308","endLine":13,"endColumn":13},{"ruleId":"305","severity":1,"message":"306","line":16,"column":8,"nodeType":"307","messageId":"308","endLine":16,"endColumn":13},{"ruleId":"305","severity":1,"message":"309","line":128,"column":9,"nodeType":"307","messageId":"308","endLine":128,"endColumn":25},{"ruleId":"305","severity":1,"message":"309","line":126,"column":9,"nodeType":"307","messageId":"308","endLine":126,"endColumn":25},{"ruleId":"297","severity":1,"message":"298","line":77,"column":26,"nodeType":"299","messageId":"300","endLine":77,"endColumn":28},{"ruleId":"297","severity":1,"message":"298","line":77,"column":26,"nodeType":"299","messageId":"300","endLine":77,"endColumn":28},{"ruleId":"305","severity":1,"message":"309","line":126,"column":9,"nodeType":"307","messageId":"308","endLine":126,"endColumn":25},{"ruleId":"305","severity":1,"message":"306","line":15,"column":8,"nodeType":"307","messageId":"308","endLine":15,"endColumn":13},{"ruleId":"305","severity":1,"message":"309","line":128,"column":9,"nodeType":"307","messageId":"308","endLine":128,"endColumn":25},{"ruleId":"305","severity":1,"message":"309","line":126,"column":9,"nodeType":"307","messageId":"308","endLine":126,"endColumn":25},{"ruleId":"305","severity":1,"message":"309","line":126,"column":9,"nodeType":"307","messageId":"308","endLine":126,"endColumn":25},{"ruleId":"305","severity":1,"message":"309","line":126,"column":9,"nodeType":"307","messageId":"308","endLine":126,"endColumn":25},{"ruleId":"297","severity":1,"message":"298","line":77,"column":26,"nodeType":"299","messageId":"300","endLine":77,"endColumn":28},{"ruleId":"305","severity":1,"message":"309","line":126,"column":9,"nodeType":"307","messageId":"308","endLine":126,"endColumn":25},{"ruleId":"305","severity":1,"message":"309","line":127,"column":9,"nodeType":"307","messageId":"308","endLine":127,"endColumn":25},{"ruleId":"305","severity":1,"message":"309","line":126,"column":9,"nodeType":"307","messageId":"308","endLine":126,"endColumn":25},{"ruleId":"305","severity":1,"message":"306","line":15,"column":8,"nodeType":"307","messageId":"308","endLine":15,"endColumn":13},{"ruleId":"305","severity":1,"message":"309","line":127,"column":9,"nodeType":"307","messageId":"308","endLine":127,"endColumn":25},{"ruleId":"305","severity":1,"message":"309","line":126,"column":9,"nodeType":"307","messageId":"308","endLine":126,"endColumn":25},{"ruleId":"305","severity":1,"message":"306","line":15,"column":8,"nodeType":"307","messageId":"308","endLine":15,"endColumn":13},{"ruleId":"305","severity":1,"message":"309","line":127,"column":9,"nodeType":"307","messageId":"308","endLine":127,"endColumn":25},{"ruleId":"305","severity":1,"message":"306","line":15,"column":8,"nodeType":"307","messageId":"308","endLine":15,"endColumn":13},{"ruleId":"305","severity":1,"message":"309","line":127,"column":9,"nodeType":"307","messageId":"308","endLine":127,"endColumn":25},{"ruleId":"305","severity":1,"message":"306","line":15,"column":8,"nodeType":"307","messageId":"308","endLine":15,"endColumn":13},{"ruleId":"305","severity":1,"message":"309","line":127,"column":9,"nodeType":"307","messageId":"308","endLine":127,"endColumn":25},{"ruleId":"305","severity":1,"message":"311","line":5,"column":8,"nodeType":"307","messageId":"308","endLine":5,"endColumn":21},{"ruleId":"305","severity":1,"message":"312","line":7,"column":8,"nodeType":"307","messageId":"308","endLine":7,"endColumn":24},{"ruleId":"305","severity":1,"message":"313","line":8,"column":8,"nodeType":"307","messageId":"308","endLine":8,"endColumn":18},{"ruleId":"305","severity":1,"message":"314","line":10,"column":8,"nodeType":"307","messageId":"308","endLine":10,"endColumn":18},{"ruleId":"305","severity":1,"message":"315","line":11,"column":8,"nodeType":"307","messageId":"308","endLine":11,"endColumn":22},{"ruleId":"297","severity":1,"message":"298","line":58,"column":28,"nodeType":"299","messageId":"300","endLine":58,"endColumn":30},{"ruleId":"297","severity":1,"message":"298","line":79,"column":26,"nodeType":"299","messageId":"300","endLine":79,"endColumn":28},{"ruleId":"297","severity":1,"message":"298","line":116,"column":23,"nodeType":"299","messageId":"300","endLine":116,"endColumn":25},{"ruleId":"297","severity":1,"message":"298","line":53,"column":26,"nodeType":"299","messageId":"300","endLine":53,"endColumn":28},{"ruleId":"297","severity":1,"message":"298","line":91,"column":79,"nodeType":"299","messageId":"300","endLine":91,"endColumn":81},{"ruleId":"305","severity":1,"message":"316","line":72,"column":25,"nodeType":"307","messageId":"308","endLine":72,"endColumn":40},{"ruleId":"305","severity":1,"message":"317","line":73,"column":20,"nodeType":"307","messageId":"308","endLine":73,"endColumn":31},{"ruleId":"305","severity":1,"message":"318","line":75,"column":10,"nodeType":"307","messageId":"308","endLine":75,"endColumn":22},{"ruleId":"305","severity":1,"message":"319","line":76,"column":10,"nodeType":"307","messageId":"308","endLine":76,"endColumn":24},{"ruleId":"297","severity":1,"message":"298","line":100,"column":28,"nodeType":"299","messageId":"300","endLine":100,"endColumn":30},{"ruleId":"297","severity":1,"message":"298","line":117,"column":28,"nodeType":"299","messageId":"300","endLine":117,"endColumn":30},{"ruleId":"305","severity":1,"message":"320","line":145,"column":5,"nodeType":"307","messageId":"308","endLine":145,"endColumn":20},{"ruleId":"297","severity":1,"message":"298","line":177,"column":23,"nodeType":"299","messageId":"300","endLine":177,"endColumn":25},{"ruleId":"297","severity":1,"message":"298","line":188,"column":26,"nodeType":"299","messageId":"300","endLine":188,"endColumn":28},{"ruleId":"321","severity":1,"message":"322","line":324,"column":19,"nodeType":"323","endLine":324,"endColumn":37},{"ruleId":"305","severity":1,"message":"324","line":2,"column":8,"nodeType":"307","messageId":"308","endLine":2,"endColumn":13},{"ruleId":"305","severity":1,"message":"325","line":3,"column":8,"nodeType":"307","messageId":"308","endLine":3,"endColumn":17},{"ruleId":"305","severity":1,"message":"326","line":4,"column":8,"nodeType":"307","messageId":"308","endLine":4,"endColumn":17},{"ruleId":"305","severity":1,"message":"327","line":5,"column":8,"nodeType":"307","messageId":"308","endLine":5,"endColumn":17},{"ruleId":"305","severity":1,"message":"328","line":6,"column":8,"nodeType":"307","messageId":"308","endLine":6,"endColumn":16},{"ruleId":"305","severity":1,"message":"329","line":10,"column":10,"nodeType":"307","messageId":"308","endLine":10,"endColumn":20},{"ruleId":"305","severity":1,"message":"330","line":17,"column":7,"nodeType":"307","messageId":"308","endLine":17,"endColumn":17},{"ruleId":"305","severity":1,"message":"331","line":19,"column":5,"nodeType":"307","messageId":"308","endLine":19,"endColumn":14},{"ruleId":"305","severity":1,"message":"332","line":20,"column":5,"nodeType":"307","messageId":"308","endLine":20,"endColumn":22},{"ruleId":"305","severity":1,"message":"333","line":51,"column":10,"nodeType":"307","messageId":"308","endLine":51,"endColumn":17},{"ruleId":"305","severity":1,"message":"334","line":51,"column":19,"nodeType":"307","messageId":"308","endLine":51,"endColumn":29},{"ruleId":"297","severity":1,"message":"298","line":142,"column":26,"nodeType":"299","messageId":"300","endLine":142,"endColumn":28},{"ruleId":"305","severity":1,"message":"335","line":15,"column":8,"nodeType":"307","messageId":"308","endLine":15,"endColumn":21},{"ruleId":"305","severity":1,"message":"336","line":17,"column":8,"nodeType":"307","messageId":"308","endLine":17,"endColumn":25},{"ruleId":"305","severity":1,"message":"330","line":23,"column":7,"nodeType":"307","messageId":"308","endLine":23,"endColumn":17},{"ruleId":"297","severity":1,"message":"298","line":87,"column":30,"nodeType":"299","messageId":"300","endLine":87,"endColumn":32},{"ruleId":"297","severity":1,"message":"298","line":106,"column":26,"nodeType":"299","messageId":"300","endLine":106,"endColumn":28},{"ruleId":"297","severity":1,"message":"298","line":135,"column":16,"nodeType":"299","messageId":"300","endLine":135,"endColumn":18},{"ruleId":"297","severity":1,"message":"298","line":159,"column":26,"nodeType":"299","messageId":"300","endLine":159,"endColumn":28},{"ruleId":"305","severity":1,"message":"337","line":174,"column":9,"nodeType":"307","messageId":"308","endLine":174,"endColumn":24},{"ruleId":"297","severity":1,"message":"298","line":188,"column":26,"nodeType":"299","messageId":"300","endLine":188,"endColumn":28},{"ruleId":"321","severity":1,"message":"322","line":390,"column":19,"nodeType":"323","endLine":390,"endColumn":37},{"ruleId":"297","severity":1,"message":"298","line":107,"column":26,"nodeType":"299","messageId":"300","endLine":107,"endColumn":28},{"ruleId":"321","severity":1,"message":"322","line":140,"column":25,"nodeType":"323","endLine":140,"endColumn":43},{"ruleId":"305","severity":1,"message":"330","line":28,"column":7,"nodeType":"307","messageId":"308","endLine":28,"endColumn":17},{"ruleId":"297","severity":1,"message":"298","line":96,"column":26,"nodeType":"299","messageId":"300","endLine":96,"endColumn":28},{"ruleId":"297","severity":1,"message":"298","line":112,"column":18,"nodeType":"299","messageId":"300","endLine":112,"endColumn":20},{"ruleId":"297","severity":1,"message":"298","line":124,"column":26,"nodeType":"299","messageId":"300","endLine":124,"endColumn":28},{"ruleId":"297","severity":1,"message":"298","line":151,"column":26,"nodeType":"299","messageId":"300","endLine":151,"endColumn":28},{"ruleId":"305","severity":1,"message":"337","line":166,"column":9,"nodeType":"307","messageId":"308","endLine":166,"endColumn":24},{"ruleId":"297","severity":1,"message":"298","line":292,"column":103,"nodeType":"299","messageId":"300","endLine":292,"endColumn":105},{"ruleId":"321","severity":1,"message":"322","line":325,"column":21,"nodeType":"323","endLine":325,"endColumn":39},{"ruleId":"305","severity":1,"message":"330","line":23,"column":7,"nodeType":"307","messageId":"308","endLine":23,"endColumn":17},{"ruleId":"305","severity":1,"message":"338","line":82,"column":10,"nodeType":"307","messageId":"308","endLine":82,"endColumn":18},{"ruleId":"305","severity":1,"message":"339","line":82,"column":20,"nodeType":"307","messageId":"308","endLine":82,"endColumn":31},{"ruleId":"297","severity":1,"message":"298","line":91,"column":26,"nodeType":"299","messageId":"300","endLine":91,"endColumn":28},{"ruleId":"297","severity":1,"message":"298","line":107,"column":14,"nodeType":"299","messageId":"300","endLine":107,"endColumn":16},{"ruleId":"297","severity":1,"message":"298","line":119,"column":26,"nodeType":"299","messageId":"300","endLine":119,"endColumn":28},{"ruleId":"297","severity":1,"message":"298","line":147,"column":26,"nodeType":"299","messageId":"300","endLine":147,"endColumn":28},{"ruleId":"305","severity":1,"message":"337","line":162,"column":9,"nodeType":"307","messageId":"308","endLine":162,"endColumn":24},{"ruleId":"321","severity":1,"message":"322","line":311,"column":21,"nodeType":"323","endLine":311,"endColumn":39},{"ruleId":"297","severity":1,"message":"298","line":57,"column":32,"nodeType":"299","messageId":"300","endLine":57,"endColumn":34},{"ruleId":"297","severity":1,"message":"298","line":74,"column":32,"nodeType":"299","messageId":"300","endLine":74,"endColumn":34},{"ruleId":"297","severity":1,"message":"298","line":114,"column":26,"nodeType":"299","messageId":"300","endLine":114,"endColumn":28},{"ruleId":"305","severity":1,"message":"311","line":5,"column":8,"nodeType":"307","messageId":"308","endLine":5,"endColumn":21},{"ruleId":"305","severity":1,"message":"312","line":7,"column":8,"nodeType":"307","messageId":"308","endLine":7,"endColumn":24},{"ruleId":"305","severity":1,"message":"313","line":8,"column":8,"nodeType":"307","messageId":"308","endLine":8,"endColumn":18},{"ruleId":"305","severity":1,"message":"340","line":9,"column":8,"nodeType":"307","messageId":"308","endLine":9,"endColumn":20},{"ruleId":"305","severity":1,"message":"314","line":10,"column":8,"nodeType":"307","messageId":"308","endLine":10,"endColumn":18},{"ruleId":"305","severity":1,"message":"315","line":11,"column":8,"nodeType":"307","messageId":"308","endLine":11,"endColumn":22},{"ruleId":"305","severity":1,"message":"341","line":13,"column":8,"nodeType":"307","messageId":"308","endLine":13,"endColumn":19},{"ruleId":"297","severity":1,"message":"298","line":86,"column":26,"nodeType":"299","messageId":"300","endLine":86,"endColumn":28},{"ruleId":"297","severity":1,"message":"298","line":110,"column":23,"nodeType":"299","messageId":"300","endLine":110,"endColumn":25},{"ruleId":"297","severity":1,"message":"298","line":123,"column":26,"nodeType":"299","messageId":"300","endLine":123,"endColumn":28},{"ruleId":"297","severity":1,"message":"298","line":128,"column":43,"nodeType":"299","messageId":"300","endLine":128,"endColumn":45},{"ruleId":"321","severity":1,"message":"322","line":244,"column":33,"nodeType":"323","endLine":244,"endColumn":51},{"ruleId":"297","severity":1,"message":"298","line":53,"column":28,"nodeType":"299","messageId":"300","endLine":53,"endColumn":30},{"ruleId":"297","severity":1,"message":"298","line":61,"column":26,"nodeType":"299","messageId":"300","endLine":61,"endColumn":28},{"ruleId":"297","severity":1,"message":"298","line":85,"column":23,"nodeType":"299","messageId":"300","endLine":85,"endColumn":25},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["342"],"no-negated-in-lhs",["343"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'fixedHeightPaper' is assigned a value but never used.","'Badge' is defined but never used.","'ListSubheader' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'PeopleIcon' is defined but never used.","'LayersIcon' is defined but never used.","'AssignmentIcon' is defined but never used.","'setAcademicYear' is assigned a value but never used.","'setSemester' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'successMessage' is assigned a value but never used.","'faculty_members' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'withStyles' is defined but never used.","'faculty_id' is assigned a value but never used.","'faculties' is assigned a value but never used.","'facultiesWithDean' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'DialogActions' is defined but never used.","'DialogContentText' is defined but never used.","'handleClickOpen' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'BarChartIcon' is defined but never used.","'PostAddIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]